{
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor",
            "name": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "tokenAddress",
                    "type": "address"
                }
            ],
            "name": "TokenDeployed",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_ticker",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_supply",
                    "type": "uint256"
                }
            ],
            "name": "deployToken",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "donateHere",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "donationAmount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_beforeAmount",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_afterAmount",
                    "type": "uint256"
                }
            ],
            "name": "findIssued",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "recoverEth",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "tokenCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "tokens",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "allSourcePaths": {
        "0": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
        "1": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/security/ReentrancyGuard.sol",
        "2": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/ERC20.sol",
        "3": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/IERC20.sol",
        "4": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "5": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Context.sol",
        "6": "contracts/Donation.sol"
    },
    "ast": {
        "absolutePath": "contracts/Donation.sol",
        "exportedSymbols": {
            "Context": [
                1423
            ],
            "Donation": [
                294
            ],
            "ERC20": [
                1401
            ],
            "IERC20": [
                1501
            ],
            "IERC20Metadata": [
                1526
            ],
            "Ownable": [
                775
            ],
            "ReentrancyGuard": [
                815
            ],
            "Token": [
                40
            ]
        },
        "id": 295,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".13"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:24:6"
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/ERC20.sol",
                "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 295,
                "sourceUnit": 1402,
                "src": "59:55:6",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
                "file": "@openzeppelin/contracts/access/Ownable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 295,
                "sourceUnit": 776,
                "src": "115:52:6",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/security/ReentrancyGuard.sol",
                "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 295,
                "sourceUnit": 816,
                "src": "169:62:6",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20",
                            "nameLocations": [
                                "251:5:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1401,
                            "src": "251:5:6"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "251:5:6"
                    }
                ],
                "canonicalName": "Token",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 40,
                "linearizedBaseContracts": [
                    40,
                    1401,
                    1526,
                    1501,
                    1423
                ],
                "name": "Token",
                "nameLocation": "242:5:6",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 25,
                            "nodeType": "Block",
                            "src": "388:43:6",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 20,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "404:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 21,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "408:6:6",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "404:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 22,
                                                "name": "_supply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12,
                                                "src": "416:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 19,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1218,
                                            "src": "398:5:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 23,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "398:26:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 24,
                                    "nodeType": "ExpressionStatement",
                                    "src": "398:26:6"
                                }
                            ]
                        },
                        "id": 26,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 15,
                                        "name": "_name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8,
                                        "src": "372:5:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 16,
                                        "name": "_ticker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "379:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 17,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 14,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "366:5:6"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1401,
                                    "src": "366:5:6"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "366:21:6"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 13,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 8,
                                    "mutability": "mutable",
                                    "name": "_name",
                                    "nameLocation": "298:5:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "284:19:6",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 7,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "284:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 10,
                                    "mutability": "mutable",
                                    "name": "_ticker",
                                    "nameLocation": "327:7:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "313:21:6",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 9,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "313:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 12,
                                    "mutability": "mutable",
                                    "name": "_supply",
                                    "nameLocation": "352:7:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "344:15:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 11,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "344:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "274:91:6"
                        },
                        "returnParameters": {
                            "id": 18,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "388:0:6"
                        },
                        "scope": 40,
                        "src": "263:168:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 38,
                            "nodeType": "Block",
                            "src": "490:38:6",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 34,
                                                "name": "_from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
                                                "src": "506:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 35,
                                                "name": "_supply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 30,
                                                "src": "513:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 33,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1218,
                                            "src": "500:5:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "500:21:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 37,
                                    "nodeType": "ExpressionStatement",
                                    "src": "500:21:6"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 39,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "446:4:6",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 31,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 28,
                                    "mutability": "mutable",
                                    "name": "_from",
                                    "nameLocation": "459:5:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "451:13:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 27,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "451:7:6",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 30,
                                    "mutability": "mutable",
                                    "name": "_supply",
                                    "nameLocation": "474:7:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39,
                                    "src": "466:15:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 29,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "466:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "450:32:6"
                        },
                        "returnParameters": {
                            "id": 32,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "490:0:6"
                        },
                        "scope": 40,
                        "src": "437:91:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 295,
                "src": "233:297:6",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 41,
                            "name": "Ownable",
                            "nameLocations": [
                                "553:7:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 775,
                            "src": "553:7:6"
                        },
                        "id": 42,
                        "nodeType": "InheritanceSpecifier",
                        "src": "553:7:6"
                    },
                    {
                        "baseName": {
                            "id": 43,
                            "name": "ReentrancyGuard",
                            "nameLocations": [
                                "562:15:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 815,
                            "src": "562:15:6"
                        },
                        "id": 44,
                        "nodeType": "InheritanceSpecifier",
                        "src": "562:15:6"
                    }
                ],
                "canonicalName": "Donation",
                "contractDependencies": [
                    40
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 294,
                "linearizedBaseContracts": [
                    294,
                    815,
                    775,
                    1423
                ],
                "name": "Donation",
                "nameLocation": "541:8:6",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "4f64b2be",
                        "id": 47,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "601:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "584:23:6",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 45,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "584:7:6",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "id": 46,
                            "nodeType": "ArrayTypeName",
                            "src": "584:9:6",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "9f181b5e",
                        "id": 49,
                        "mutability": "mutable",
                        "name": "tokenCount",
                        "nameLocation": "628:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "613:25:6",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 48,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "613:7:6",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "91d24864a084ab70b268a1f865e757ca12006cf298d763b6be697302ef86498c",
                        "id": 53,
                        "name": "TokenDeployed",
                        "nameLocation": "650:13:6",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 52,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 51,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "tokenAddress",
                                    "nameLocation": "672:12:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 53,
                                    "src": "664:20:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 50,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "664:7:6",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "663:22:6"
                        },
                        "src": "644:42:6"
                    },
                    {
                        "body": {
                            "id": 115,
                            "nodeType": "Block",
                            "src": "833:310:6",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 67,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 65,
                                                    "name": "tokenCount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 49,
                                                    "src": "851:10:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 66,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "865:1:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "851:15:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e2062652075736564206f6e6c79206f6e652074696d65",
                                                "id": 68,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "868:27:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f30802bad23a92e0a1fcfd52c47a0591bccd364ce1adfb16d8713561eb484006",
                                                    "typeString": "literal_string \"can be used only one time\""
                                                },
                                                "value": "can be used only one time"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f30802bad23a92e0a1fcfd52c47a0591bccd364ce1adfb16d8713561eb484006",
                                                    "typeString": "literal_string \"can be used only one time\""
                                                }
                                            ],
                                            "id": 64,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "843:7:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 69,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "843:53:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 70,
                                    "nodeType": "ExpressionStatement",
                                    "src": "843:53:6"
                                },
                                {
                                    "assignments": [
                                        73
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 73,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nameLocation": "912:5:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 115,
                                            "src": "906:11:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Token_$40",
                                                "typeString": "contract Token"
                                            },
                                            "typeName": {
                                                "id": 72,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 71,
                                                    "name": "Token",
                                                    "nameLocations": [
                                                        "906:5:6"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 40,
                                                    "src": "906:5:6"
                                                },
                                                "referencedDeclaration": 40,
                                                "src": "906:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 81,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 77,
                                                "name": "_name",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 55,
                                                "src": "930:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            },
                                            {
                                                "id": 78,
                                                "name": "_ticker",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 57,
                                                "src": "937:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            },
                                            {
                                                "id": 79,
                                                "name": "_supply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 59,
                                                "src": "946:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 76,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "920:9:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_Token_$40_$",
                                                "typeString": "function (string memory,string memory,uint256) returns (contract Token)"
                                            },
                                            "typeName": {
                                                "id": 75,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 74,
                                                    "name": "Token",
                                                    "nameLocations": [
                                                        "924:5:6"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 40,
                                                    "src": "924:5:6"
                                                },
                                                "referencedDeclaration": 40,
                                                "src": "924:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            }
                                        },
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "920:34:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Token_$40",
                                            "typeString": "contract Token"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "906:48:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 85,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "979:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 86,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "983:6:6",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "979:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 87,
                                                "name": "_supply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 59,
                                                "src": "991:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 82,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73,
                                                "src": "964:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            },
                                            "id": 84,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "970:8:6",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 939,
                                            "src": "964:14:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 88,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "964:35:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 89,
                                    "nodeType": "ExpressionStatement",
                                    "src": "964:35:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 95,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 73,
                                                        "src": "1029:5:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Token_$40",
                                                            "typeString": "contract Token"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Token_$40",
                                                            "typeString": "contract Token"
                                                        }
                                                    ],
                                                    "id": 94,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1021:7:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 93,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1021:7:6",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 96,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1021:14:6",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 90,
                                                "name": "tokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47,
                                                "src": "1009:6:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                }
                                            },
                                            "id": 92,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1016:4:6",
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "1009:11:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                "typeString": "function (address[] storage pointer,address)"
                                            }
                                        },
                                        "id": 97,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1009:27:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 98,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1009:27:6"
                                },
                                {
                                    "expression": {
                                        "id": 101,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 99,
                                            "name": "tokenCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49,
                                            "src": "1046:10:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 100,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1060:1:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1046:15:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 102,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1046:15:6"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 106,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 73,
                                                        "src": "1098:5:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Token_$40",
                                                            "typeString": "contract Token"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Token_$40",
                                                            "typeString": "contract Token"
                                                        }
                                                    ],
                                                    "id": 105,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1090:7:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 104,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1090:7:6",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 107,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1090:14:6",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 103,
                                            "name": "TokenDeployed",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 53,
                                            "src": "1076:13:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1076:29:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 109,
                                    "nodeType": "EmitStatement",
                                    "src": "1071:34:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 112,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73,
                                                "src": "1130:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            ],
                                            "id": 111,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1122:7:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                            },
                                            "typeName": {
                                                "id": 110,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1122:7:6",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 113,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1122:14:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 63,
                                    "id": 114,
                                    "nodeType": "Return",
                                    "src": "1115:21:6"
                                }
                            ]
                        },
                        "functionSelector": "3a93babb",
                        "id": 116,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "deployToken",
                        "nameLocation": "701:11:6",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 60,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 55,
                                    "mutability": "mutable",
                                    "name": "_name",
                                    "nameLocation": "738:5:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 116,
                                    "src": "722:21:6",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 54,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "722:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 57,
                                    "mutability": "mutable",
                                    "name": "_ticker",
                                    "nameLocation": "769:7:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 116,
                                    "src": "753:23:6",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 56,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "753:6:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 59,
                                    "mutability": "mutable",
                                    "name": "_supply",
                                    "nameLocation": "794:7:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 116,
                                    "src": "786:15:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 58,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "786:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "712:95:6"
                        },
                        "returnParameters": {
                            "id": 63,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 62,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 116,
                                    "src": "824:7:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 61,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "824:7:6",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "823:9:6"
                        },
                        "scope": 294,
                        "src": "692:451:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "ae677d8c",
                        "id": 120,
                        "mutability": "mutable",
                        "name": "donationAmount",
                        "nameLocation": "1194:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "1159:49:6",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                        },
                        "typeName": {
                            "id": 119,
                            "keyType": {
                                "id": 117,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1167:7:6",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1159:27:6",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                            },
                            "valueType": {
                                "id": 118,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1178:7:6",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 136,
                            "nodeType": "Block",
                            "src": "1481:93:6",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 129,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 126,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "1499:3:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 127,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1503:5:6",
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1499:9:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 128,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1511:1:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "1499:13:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e6e6f7420646f6e6174652030",
                                                "id": 130,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1514:17:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d709b15667c330525a84bf3916ecc9ba951f4eee8bb3ad0c25ac34fad0bbf380",
                                                    "typeString": "literal_string \"Cannot donate 0\""
                                                },
                                                "value": "Cannot donate 0"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d709b15667c330525a84bf3916ecc9ba951f4eee8bb3ad0c25ac34fad0bbf380",
                                                    "typeString": "literal_string \"Cannot donate 0\""
                                                }
                                            ],
                                            "id": 125,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1491:7:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 131,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1491:41:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 132,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1491:41:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 133,
                                            "name": "calculateTransferAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 211,
                                            "src": "1542:23:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 134,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1542:25:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 135,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1542:25:6"
                                }
                            ]
                        },
                        "functionSelector": "d43bb807",
                        "id": 137,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 123,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 122,
                                    "name": "nonReentrant",
                                    "nameLocations": [
                                        "1468:12:6"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 814,
                                    "src": "1468:12:6"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1468:12:6"
                            }
                        ],
                        "name": "donateHere",
                        "nameLocation": "1440:10:6",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 121,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1450:2:6"
                        },
                        "returnParameters": {
                            "id": 124,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1481:0:6"
                        },
                        "scope": 294,
                        "src": "1431:143:6",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 210,
                            "nodeType": "Block",
                            "src": "1624:532:6",
                            "statements": [
                                {
                                    "assignments": [
                                        141
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 141,
                                            "mutability": "mutable",
                                            "name": "calculatedTransferAmount",
                                            "nameLocation": "1642:24:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "1634:32:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 140,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1634:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 143,
                                    "initialValue": {
                                        "hexValue": "30",
                                        "id": 142,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1669:1:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1634:36:6"
                                },
                                {
                                    "assignments": [
                                        145
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 145,
                                            "mutability": "mutable",
                                            "name": "beforeAmount",
                                            "nameLocation": "1688:12:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "1680:20:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 144,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1680:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 150,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 146,
                                            "name": "donationAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 120,
                                            "src": "1703:14:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                            }
                                        },
                                        "id": 149,
                                        "indexExpression": {
                                            "expression": {
                                                "id": 147,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "1718:3:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 148,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1722:6:6",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "1718:10:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1703:26:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1680:49:6"
                                },
                                {
                                    "assignments": [
                                        152
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 152,
                                            "mutability": "mutable",
                                            "name": "issueAmount",
                                            "nameLocation": "1747:11:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "1739:19:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 151,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1739:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 154,
                                    "initialValue": {
                                        "hexValue": "30",
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1761:1:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1739:23:6"
                                },
                                {
                                    "assignments": [
                                        156
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 156,
                                            "mutability": "mutable",
                                            "name": "transferAmount",
                                            "nameLocation": "1780:14:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "1772:22:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 155,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1772:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 162,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 158,
                                                "name": "beforeAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 145,
                                                "src": "1808:12:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 159,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "1822:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 160,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1826:5:6",
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "src": "1822:9:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 157,
                                            "name": "findIssued",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 270,
                                            "src": "1797:10:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                        },
                                        "id": 161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1797:35:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1772:60:6"
                                },
                                {
                                    "expression": {
                                        "id": 169,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 163,
                                                "name": "donationAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 120,
                                                "src": "1842:14:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                }
                                            },
                                            "id": 166,
                                            "indexExpression": {
                                                "expression": {
                                                    "id": 164,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "1857:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 165,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1861:6:6",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1857:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1842:26:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 167,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "1872:3:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 168,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1876:5:6",
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "src": "1872:9:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1842:39:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 170,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1842:39:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 179,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 174,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1907:1:6",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 173,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1899:7:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 172,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1899:7:6",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 175,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1899:10:6",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "baseExpression": {
                                                        "id": 176,
                                                        "name": "tokens",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 47,
                                                        "src": "1913:6:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                            "typeString": "address[] storage ref"
                                                        }
                                                    },
                                                    "id": 178,
                                                    "indexExpression": {
                                                        "hexValue": "30",
                                                        "id": 177,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1920:1:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1913:9:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1899:23:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "746f6b656e206973206e6f74206465706c6f796564",
                                                "id": 180,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1924:23:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d6ac0000d40eed4a0a539ed6c290dec0f62b9111d9945033d5a65f2fc0b8c368",
                                                    "typeString": "literal_string \"token is not deployed\""
                                                },
                                                "value": "token is not deployed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d6ac0000d40eed4a0a539ed6c290dec0f62b9111d9945033d5a65f2fc0b8c368",
                                                    "typeString": "literal_string \"token is not deployed\""
                                                }
                                            ],
                                            "id": 171,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1891:7:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 181,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1891:57:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 182,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1891:57:6"
                                },
                                {
                                    "assignments": [
                                        185
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 185,
                                            "mutability": "mutable",
                                            "name": "myToken",
                                            "nameLocation": "1964:7:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "1958:13:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Token_$40",
                                                "typeString": "contract Token"
                                            },
                                            "typeName": {
                                                "id": 184,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 183,
                                                    "name": "Token",
                                                    "nameLocations": [
                                                        "1958:5:6"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 40,
                                                    "src": "1958:5:6"
                                                },
                                                "referencedDeclaration": 40,
                                                "src": "1958:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 191,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "baseExpression": {
                                                    "id": 187,
                                                    "name": "tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 47,
                                                    "src": "1980:6:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                        "typeString": "address[] storage ref"
                                                    }
                                                },
                                                "id": 189,
                                                "indexExpression": {
                                                    "hexValue": "30",
                                                    "id": 188,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1987:1:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1980:9:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 186,
                                            "name": "Token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 40,
                                            "src": "1974:5:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_Token_$40_$",
                                                "typeString": "type(contract Token)"
                                            }
                                        },
                                        "id": 190,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1974:16:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Token_$40",
                                            "typeString": "contract Token"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1958:32:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 195,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "2014:3:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 196,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "2018:6:6",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2014:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 197,
                                                "name": "transferAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 156,
                                                "src": "2026:14:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 192,
                                                "name": "myToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 185,
                                                "src": "2001:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            },
                                            "id": 194,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2009:4:6",
                                            "memberName": "mint",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 39,
                                            "src": "2001:12:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256) external"
                                            }
                                        },
                                        "id": 198,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2001:40:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 199,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2001:40:6"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 203,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 703,
                                                    "src": "2064:5:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 204,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2064:7:6",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 207,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 205,
                                                    "name": "transferAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 156,
                                                    "src": "2073:14:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                    "hexValue": "3130",
                                                    "id": 206,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2090:2:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10_by_1",
                                                        "typeString": "int_const 10"
                                                    },
                                                    "value": "10"
                                                },
                                                "src": "2073:19:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 200,
                                                "name": "myToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 185,
                                                "src": "2051:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Token_$40",
                                                    "typeString": "contract Token"
                                                }
                                            },
                                            "id": 202,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2059:4:6",
                                            "memberName": "mint",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 39,
                                            "src": "2051:12:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256) external"
                                            }
                                        },
                                        "id": 208,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2051:42:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 209,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2051:42:6"
                                }
                            ]
                        },
                        "id": 211,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "calculateTransferAmount",
                        "nameLocation": "1589:23:6",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 138,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1612:2:6"
                        },
                        "returnParameters": {
                            "id": 139,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1624:0:6"
                        },
                        "scope": 294,
                        "src": "1580:576:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 269,
                            "nodeType": "Block",
                            "src": "2285:365:6",
                            "statements": [
                                {
                                    "assignments": [
                                        221
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 221,
                                            "mutability": "mutable",
                                            "name": "totalPrizeAmount",
                                            "nameLocation": "2303:16:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 269,
                                            "src": "2295:24:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 220,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2295:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 222,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2295:24:6"
                                },
                                {
                                    "assignments": [
                                        224
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 224,
                                            "mutability": "mutable",
                                            "name": "totalAmount",
                                            "nameLocation": "2337:11:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 269,
                                            "src": "2329:19:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 223,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2329:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 228,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 227,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 225,
                                            "name": "_beforeAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 213,
                                            "src": "2351:13:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                            "id": 226,
                                            "name": "_afterAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 215,
                                            "src": "2367:12:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2351:28:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2329:50:6"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 229,
                                            "name": "_beforeAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 213,
                                            "src": "2393:13:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 230,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2410:1:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "2393:18:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 241,
                                    "nodeType": "IfStatement",
                                    "src": "2389:78:6",
                                    "trueBody": {
                                        "id": 240,
                                        "nodeType": "Block",
                                        "src": "2413:54:6",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 238,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 232,
                                                        "name": "totalPrizeAmount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 221,
                                                        "src": "2427:16:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        },
                                                        "id": 237,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "31",
                                                            "id": 233,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2446:1:6",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "*",
                                                        "rightExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                "typeString": "int_const 1000000000000000000"
                                                            },
                                                            "id": 236,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "hexValue": "3130",
                                                                "id": 234,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2450:2:6",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10_by_1",
                                                                    "typeString": "int_const 10"
                                                                },
                                                                "value": "10"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "hexValue": "3138",
                                                                "id": 235,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2454:2:6",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_18_by_1",
                                                                    "typeString": "int_const 18"
                                                                },
                                                                "value": "18"
                                                            },
                                                            "src": "2450:6:6",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                "typeString": "int_const 1000000000000000000"
                                                            }
                                                        },
                                                        "src": "2446:10:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        }
                                                    },
                                                    "src": "2427:29:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 239,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2427:29:6"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 267,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 242,
                                            "name": "totalPrizeAmount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 221,
                                            "src": "2524:16:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                            "components": [
                                                {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 265,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "components": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 259,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "components": [
                                                                        {
                                                                            "commonType": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            },
                                                                            "id": 249,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                                "commonType": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                },
                                                                                "id": 245,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "leftExpression": {
                                                                                    "id": 243,
                                                                                    "name": "totalAmount",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 224,
                                                                                    "src": "2558:11:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                },
                                                                                "nodeType": "BinaryOperation",
                                                                                "operator": "*",
                                                                                "rightExpression": {
                                                                                    "hexValue": "31",
                                                                                    "id": 244,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "2572:1:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_1_by_1",
                                                                                        "typeString": "int_const 1"
                                                                                    },
                                                                                    "value": "1"
                                                                                },
                                                                                "src": "2558:15:6",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "*",
                                                                            "rightExpression": {
                                                                                "commonType": {
                                                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                                    "typeString": "int_const 1000000000000000000"
                                                                                },
                                                                                "id": 248,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "leftExpression": {
                                                                                    "hexValue": "3130",
                                                                                    "id": 246,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "2576:2:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_10_by_1",
                                                                                        "typeString": "int_const 10"
                                                                                    },
                                                                                    "value": "10"
                                                                                },
                                                                                "nodeType": "BinaryOperation",
                                                                                "operator": "**",
                                                                                "rightExpression": {
                                                                                    "hexValue": "3138",
                                                                                    "id": 247,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "2580:2:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_18_by_1",
                                                                                        "typeString": "int_const 18"
                                                                                    },
                                                                                    "value": "18"
                                                                                },
                                                                                "src": "2576:6:6",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                                    "typeString": "int_const 1000000000000000000"
                                                                                }
                                                                            },
                                                                            "src": "2558:24:6",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "id": 250,
                                                                    "isConstant": false,
                                                                    "isInlineArray": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "TupleExpression",
                                                                    "src": "2557:26:6",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "-",
                                                                "rightExpression": {
                                                                    "components": [
                                                                        {
                                                                            "commonType": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            },
                                                                            "id": 257,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                                "commonType": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                },
                                                                                "id": 253,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "leftExpression": {
                                                                                    "id": 251,
                                                                                    "name": "_beforeAmount",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 213,
                                                                                    "src": "2587:13:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                },
                                                                                "nodeType": "BinaryOperation",
                                                                                "operator": "*",
                                                                                "rightExpression": {
                                                                                    "hexValue": "31",
                                                                                    "id": 252,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "2603:1:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_1_by_1",
                                                                                        "typeString": "int_const 1"
                                                                                    },
                                                                                    "value": "1"
                                                                                },
                                                                                "src": "2587:17:6",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "*",
                                                                            "rightExpression": {
                                                                                "commonType": {
                                                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                                    "typeString": "int_const 1000000000000000000"
                                                                                },
                                                                                "id": 256,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "leftExpression": {
                                                                                    "hexValue": "3130",
                                                                                    "id": 254,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "2607:2:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_10_by_1",
                                                                                        "typeString": "int_const 10"
                                                                                    },
                                                                                    "value": "10"
                                                                                },
                                                                                "nodeType": "BinaryOperation",
                                                                                "operator": "**",
                                                                                "rightExpression": {
                                                                                    "hexValue": "3138",
                                                                                    "id": 255,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "2611:2:6",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_18_by_1",
                                                                                        "typeString": "int_const 18"
                                                                                    },
                                                                                    "value": "18"
                                                                                },
                                                                                "src": "2607:6:6",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                                    "typeString": "int_const 1000000000000000000"
                                                                                }
                                                                            },
                                                                            "src": "2587:26:6",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "id": 258,
                                                                    "isConstant": false,
                                                                    "isInlineArray": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "TupleExpression",
                                                                    "src": "2586:28:6",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "2557:57:6",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "id": 260,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "2556:59:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "/",
                                                    "rightExpression": {
                                                        "components": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                                    "typeString": "int_const 100000000000000000"
                                                                },
                                                                "id": 263,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "hexValue": "3130",
                                                                    "id": 261,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2635:2:6",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_10_by_1",
                                                                        "typeString": "int_const 10"
                                                                    },
                                                                    "value": "10"
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "**",
                                                                "rightExpression": {
                                                                    "hexValue": "3137",
                                                                    "id": 262,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2639:2:6",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_17_by_1",
                                                                        "typeString": "int_const 17"
                                                                    },
                                                                    "value": "17"
                                                                },
                                                                "src": "2635:6:6",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                                    "typeString": "int_const 100000000000000000"
                                                                }
                                                            }
                                                        ],
                                                        "id": 264,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "2634:8:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                            "typeString": "int_const 100000000000000000"
                                                        }
                                                    },
                                                    "src": "2556:86:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "id": 266,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "2555:88:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2524:119:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 219,
                                    "id": 268,
                                    "nodeType": "Return",
                                    "src": "2505:138:6"
                                }
                            ]
                        },
                        "functionSelector": "b913ea38",
                        "id": 270,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "findIssued",
                        "nameLocation": "2171:10:6",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 216,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 213,
                                    "mutability": "mutable",
                                    "name": "_beforeAmount",
                                    "nameLocation": "2190:13:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 270,
                                    "src": "2182:21:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 212,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2182:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 215,
                                    "mutability": "mutable",
                                    "name": "_afterAmount",
                                    "nameLocation": "2213:12:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 270,
                                    "src": "2205:20:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 214,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2205:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2181:45:6"
                        },
                        "returnParameters": {
                            "id": 219,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 218,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 270,
                                    "src": "2272:7:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 217,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2272:7:6",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2271:9:6"
                        },
                        "scope": 294,
                        "src": "2162:488:6",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 288,
                            "nodeType": "Block",
                            "src": "2811:68:6",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 283,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -28,
                                                            "src": "2858:4:6",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_Donation_$294",
                                                                "typeString": "contract Donation"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_Donation_$294",
                                                                "typeString": "contract Donation"
                                                            }
                                                        ],
                                                        "id": 282,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "2850:7:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 281,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2850:7:6",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 284,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2850:13:6",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 285,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "2864:7:6",
                                                "memberName": "balance",
                                                "nodeType": "MemberAccess",
                                                "src": "2850:21:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 277,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "2829:3:6",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 278,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "2833:6:6",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "2829:10:6",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 276,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2821:8:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 275,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2821:8:6",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 279,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2821:19:6",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 280,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2841:8:6",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "2821:28:6",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 286,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2821:51:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 287,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2821:51:6"
                                }
                            ]
                        },
                        "functionSelector": "bcdb446b",
                        "id": 289,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 273,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 272,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "2801:9:6"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 694,
                                    "src": "2801:9:6"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2801:9:6"
                            }
                        ],
                        "name": "recoverEth",
                        "nameLocation": "2779:10:6",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 271,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2789:2:6"
                        },
                        "returnParameters": {
                            "id": 274,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2811:0:6"
                        },
                        "scope": 294,
                        "src": "2770:109:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 292,
                            "nodeType": "Block",
                            "src": "2988:2:6",
                            "statements": []
                        },
                        "id": 293,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 290,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2978:2:6"
                        },
                        "returnParameters": {
                            "id": 291,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2988:0:6"
                        },
                        "scope": 294,
                        "src": "2967:23:6",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 295,
                "src": "532:2482:6",
                "usedErrors": []
            }
        ],
        "src": "33:2982:6"
    },
    "bytecode": "608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6118e0806100826000396000f3fe6080604052600436106200009d5760003560e01c8063ae677d8c1162000060578063ae677d8c146200016a578063b913ea38146200019b578063bcdb446b14620001c0578063d43bb80714620001d8578063f2fde38b14620001e257600080fd5b80633a93babb14620000a25780634f64b2be14620000e4578063715018a614620001095780638da5cb5b14620001235780639f181b5e1462000143575b600080fd5b348015620000af57600080fd5b50620000c7620000c1366004620008ef565b62000207565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f157600080fd5b50620000c7620001033660046200096a565b620003c9565b3480156200011657600080fd5b5062000121620003f4565b005b3480156200013057600080fd5b506000546001600160a01b0316620000c7565b3480156200015057600080fd5b506200015b60035481565b604051908152602001620000db565b3480156200017757600080fd5b506200015b6200018936600462000984565b60046020526000908152604090205481565b348015620001a857600080fd5b506200015b620001ba366004620009b6565b6200040c565b348015620001cd57600080fd5b5062000121620004ad565b62000121620004e7565b348015620001ef57600080fd5b50620001216200020136600462000984565b62000591565b6000600354600014620002615760405162461bcd60e51b815260206004820152601960248201527f63616e2062652075736564206f6e6c79206f6e652074696d650000000000000060448201526064015b60405180910390fd5b60008686868686604051620002769062000895565b6200028695949392919062000a02565b604051809103906000f080158015620002a3573d6000803e3d6000fd5b5060405163a9059cbb60e01b8152336004820152602481018590529091506001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015620002f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031b919062000a40565b50600280546001808201835560009283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b0319166001600160a01b03851617905560038054919290916200037e90849062000a7a565b90915550506040516001600160a01b03821681527f91d24864a084ab70b268a1f865e757ca12006cf298d763b6be697302ef86498c9060200160405180910390a19695505050505050565b60028181548110620003da57600080fd5b6000918252602090912001546001600160a01b0316905081565b620003fe6200060d565b6200040a600062000669565b565b600080806200041c848662000a7a565b9050846000036200043357670de0b6b3a764000091505b67016345785d8a00006200044986600162000a90565b6200045d90670de0b6b3a764000062000a90565b6200046a83600162000a90565b6200047e90670de0b6b3a764000062000a90565b6200048a919062000aaa565b62000496919062000ac0565b620004a2908362000a7a565b925050505b92915050565b620004b76200060d565b60405133904780156108fc02916000818181858888f19350505050158015620004e4573d6000803e3d6000fd5b50565b6002600154036200053b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640162000258565b600260015534620005815760405162461bcd60e51b815260206004820152600f60248201526e043616e6e6f7420646f6e617465203608c1b604482015260640162000258565b6200058b620006b9565b60018055565b6200059b6200060d565b6001600160a01b038116620006025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000258565b620004e48162000669565b6000546001600160a01b031633146200040a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000258565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336000908152600460205260408120548180620006d783346200040c565b33600090815260046020526040812080549293503492909190620006fd90849062000a7a565b90915550506002805460009062000718576200071862000ae3565b60009182526020822001546001600160a01b03169003620007745760405162461bcd60e51b81526020600482015260156024820152741d1bdad95b881a5cc81b9bdd0819195c1b1bde5959605a1b604482015260640162000258565b600060026000815481106200078d576200078d62000ae3565b6000918252602090912001546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116915081906340c10f1990604401600060405180830381600087803b158015620007e657600080fd5b505af1158015620007fb573d6000803e3d6000fd5b50505050806001600160a01b03166340c10f19620008216000546001600160a01b031690565b6200082e600a8662000ac0565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156200087557600080fd5b505af11580156200088a573d6000803e3d6000fd5b505050505050505050565b610db18062000afa83390190565b60008083601f840112620008b657600080fd5b50813567ffffffffffffffff811115620008cf57600080fd5b602083019150836020828501011115620008e857600080fd5b9250929050565b6000806000806000606086880312156200090857600080fd5b853567ffffffffffffffff808211156200092157600080fd5b6200092f89838a01620008a3565b909750955060208801359150808211156200094957600080fd5b506200095888828901620008a3565b96999598509660400135949350505050565b6000602082840312156200097d57600080fd5b5035919050565b6000602082840312156200099757600080fd5b81356001600160a01b0381168114620009af57600080fd5b9392505050565b60008060408385031215620009ca57600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600062000a18606083018789620009d9565b828103602084015262000a2d818688620009d9565b9150508260408301529695505050505050565b60006020828403121562000a5357600080fd5b81518015158114620009af57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115620004a757620004a762000a64565b8082028115828204841417620004a757620004a762000a64565b81810381811115620004a757620004a762000a64565b60008262000ade57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fdfe60806040523480156200001157600080fd5b5060405162000db138038062000db1833981016040819052620000349162000223565b8282600362000044838262000324565b50600462000053828262000324565b5050506200006833826200007160201b60201c565b50505062000418565b6001600160a01b038216620000cc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000e09190620003f0565b90915550506001600160a01b038216600090815260208190526040812080548392906200010f908490620003f0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018657600080fd5b81516001600160401b0380821115620001a357620001a36200015e565b604051601f8301601f19908116603f01168101908282118183101715620001ce57620001ce6200015e565b81604052838152602092508683858801011115620001eb57600080fd5b600091505b838210156200020f5785820183015181830184015290820190620001f0565b600093810190920192909252949350505050565b6000806000606084860312156200023957600080fd5b83516001600160401b03808211156200025157600080fd5b6200025f8783880162000174565b945060208601519150808211156200027657600080fd5b50620002858682870162000174565b925050604084015190509250925092565b600181811c90821680620002ab57607f821691505b602082108103620002cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015957600081815260208120601f850160051c81016020861015620002fb5750805b601f850160051c820191505b818110156200031c5782815560010162000307565b505050505050565b81516001600160401b038111156200034057620003406200015e565b620003588162000351845462000296565b84620002d2565b602080601f831160018114620003905760008415620003775750858301515b600019600386901b1c1916600185901b1785556200031c565b600085815260208120601f198616915b82811015620003c157888601518255948401946001909101908401620003a0565b5085821015620003e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200041257634e487b7160e01b600052601160045260246000fd5b92915050565b61098980620004286000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906107d3565b60405180910390f35b6100ea6100e536600461083d565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610867565b61026c565b604051601281526020016100ce565b6100ea61013c36600461083d565b610290565b61015461014f36600461083d565b6102b2565b005b6100fe6101643660046108a3565b6001600160a01b031660009081526020819052604090205490565b6100c16102c0565b6100ea61019536600461083d565b6102cf565b6100ea6101a836600461083d565b61034f565b6100fe6101bb3660046108c5565b61035d565b6060600380546101cf906108f8565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108f8565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610388565b60019150505b92915050565b60003361027a8582856104ac565b610285858585610526565b506001949350505050565b6000336102608185856102a3838361035d565b6102ad9190610932565b610388565b6102bc82826106f4565b5050565b6060600480546101cf906108f8565b600033816102dd828661035d565b9050838110156103425760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102858286868403610388565b600033610260818585610526565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610339565b6001600160a01b03821661044b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610339565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b8848461035d565b9050600019811461052057818110156105135760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610339565b6105208484848403610388565b50505050565b6001600160a01b03831661058a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610339565b6001600160a01b0382166105ec5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610339565b6001600160a01b038316600090815260208190526040902054818110156106645760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610339565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061069b908490610932565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e791815260200190565b60405180910390a3610520565b6001600160a01b03821661074a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610339565b806002600082825461075c9190610932565b90915550506001600160a01b03821660009081526020819052604081208054839290610789908490610932565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610800578581018301518582016040015282016107e4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461083857600080fd5b919050565b6000806040838503121561085057600080fd5b61085983610821565b946020939093013593505050565b60008060006060848603121561087c57600080fd5b61088584610821565b925061089360208501610821565b9150604084013590509250925092565b6000602082840312156108b557600080fd5b6108be82610821565b9392505050565b600080604083850312156108d857600080fd5b6108e183610821565b91506108ef60208401610821565b90509250929050565b600181811c9082168061090c57607f821691505b60208210810361092c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026657634e487b7160e01b600052601160045260246000fdfea2646970667358221220fd13d80d9deb7bf5e3ae19f97dd4530f15db4ae50242c5c6e6c23e1bff5ee78a64736f6c63430008110033a26469706673582212204531f12f499514c5f501dded0202b6ea0039d5a30822e7b8fe193b9af2cf4cd364736f6c63430008110033",
    "bytecodeSha1": "0457ff49ac78d52304ff68ffc4e1b75961d18b99",
    "compiler": {
        "evm_version": "istanbul",
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "version": "0.8.17+commit.8df45f5f"
    },
    "contractName": "Donation",
    "coverageMap": {
        "branches": {
            "0": {
                "Ownable._checkOwner": {
                    "27": [
                        1422,
                        1445,
                        true
                    ]
                },
                "Ownable.transferOwnership": {
                    "26": [
                        2169,
                        2191,
                        true
                    ]
                }
            },
            "1": {},
            "2": {},
            "3": {},
            "4": {},
            "5": {},
            "6": {
                "Donation.calculateTransferAmount": {
                    "25": [
                        1899,
                        1922,
                        true
                    ]
                },
                "Donation.deployToken": {
                    "23": [
                        851,
                        866,
                        true
                    ]
                },
                "Donation.findIssued": {
                    "24": [
                        2393,
                        2411,
                        false
                    ]
                }
            }
        },
        "statements": {
            "0": {
                "Ownable._checkOwner": {
                    "16": [
                        1414,
                        1482
                    ]
                },
                "Ownable._transferOwnership": {
                    "17": [
                        2541,
                        2558
                    ],
                    "18": [
                        2568,
                        2613
                    ]
                },
                "Ownable.owner": {
                    "0": [
                        1266,
                        1279
                    ]
                },
                "Ownable.renounceOwnership": {
                    "7": [
                        1895,
                        1925
                    ]
                },
                "Ownable.transferOwnership": {
                    "13": [
                        2161,
                        2234
                    ],
                    "14": [
                        2244,
                        2272
                    ]
                }
            },
            "1": {},
            "2": {},
            "3": {},
            "4": {},
            "5": {
                "Context._msgSender": {
                    "15": [
                        712,
                        729
                    ]
                }
            },
            "6": {
                "Donation.calculateTransferAmount": {
                    "19": [
                        1842,
                        1881
                    ],
                    "20": [
                        1891,
                        1948
                    ],
                    "21": [
                        2001,
                        2041
                    ],
                    "22": [
                        2051,
                        2093
                    ]
                },
                "Donation.deployToken": {
                    "1": [
                        843,
                        896
                    ],
                    "2": [
                        964,
                        999
                    ],
                    "3": [
                        1009,
                        1036
                    ],
                    "4": [
                        1046,
                        1061
                    ],
                    "5": [
                        1071,
                        1105
                    ],
                    "6": [
                        1115,
                        1136
                    ]
                },
                "Donation.donateHere": {
                    "11": [
                        1491,
                        1532
                    ],
                    "12": [
                        1542,
                        1567
                    ]
                },
                "Donation.findIssued": {
                    "8": [
                        2427,
                        2456
                    ],
                    "9": [
                        2505,
                        2643
                    ]
                },
                "Donation.recoverEth": {
                    "10": [
                        2821,
                        2872
                    ]
                }
            }
        }
    },
    "dependencies": [
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Context",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/ERC20",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC20",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC20Metadata",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Ownable",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/ReentrancyGuard",
        "Token"
    ],
    "deployedBytecode": "6080604052600436106200009d5760003560e01c8063ae677d8c1162000060578063ae677d8c146200016a578063b913ea38146200019b578063bcdb446b14620001c0578063d43bb80714620001d8578063f2fde38b14620001e257600080fd5b80633a93babb14620000a25780634f64b2be14620000e4578063715018a614620001095780638da5cb5b14620001235780639f181b5e1462000143575b600080fd5b348015620000af57600080fd5b50620000c7620000c1366004620008ef565b62000207565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f157600080fd5b50620000c7620001033660046200096a565b620003c9565b3480156200011657600080fd5b5062000121620003f4565b005b3480156200013057600080fd5b506000546001600160a01b0316620000c7565b3480156200015057600080fd5b506200015b60035481565b604051908152602001620000db565b3480156200017757600080fd5b506200015b6200018936600462000984565b60046020526000908152604090205481565b348015620001a857600080fd5b506200015b620001ba366004620009b6565b6200040c565b348015620001cd57600080fd5b5062000121620004ad565b62000121620004e7565b348015620001ef57600080fd5b50620001216200020136600462000984565b62000591565b6000600354600014620002615760405162461bcd60e51b815260206004820152601960248201527f63616e2062652075736564206f6e6c79206f6e652074696d650000000000000060448201526064015b60405180910390fd5b60008686868686604051620002769062000895565b6200028695949392919062000a02565b604051809103906000f080158015620002a3573d6000803e3d6000fd5b5060405163a9059cbb60e01b8152336004820152602481018590529091506001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015620002f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031b919062000a40565b50600280546001808201835560009283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b0319166001600160a01b03851617905560038054919290916200037e90849062000a7a565b90915550506040516001600160a01b03821681527f91d24864a084ab70b268a1f865e757ca12006cf298d763b6be697302ef86498c9060200160405180910390a19695505050505050565b60028181548110620003da57600080fd5b6000918252602090912001546001600160a01b0316905081565b620003fe6200060d565b6200040a600062000669565b565b600080806200041c848662000a7a565b9050846000036200043357670de0b6b3a764000091505b67016345785d8a00006200044986600162000a90565b6200045d90670de0b6b3a764000062000a90565b6200046a83600162000a90565b6200047e90670de0b6b3a764000062000a90565b6200048a919062000aaa565b62000496919062000ac0565b620004a2908362000a7a565b925050505b92915050565b620004b76200060d565b60405133904780156108fc02916000818181858888f19350505050158015620004e4573d6000803e3d6000fd5b50565b6002600154036200053b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640162000258565b600260015534620005815760405162461bcd60e51b815260206004820152600f60248201526e043616e6e6f7420646f6e617465203608c1b604482015260640162000258565b6200058b620006b9565b60018055565b6200059b6200060d565b6001600160a01b038116620006025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000258565b620004e48162000669565b6000546001600160a01b031633146200040a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000258565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336000908152600460205260408120548180620006d783346200040c565b33600090815260046020526040812080549293503492909190620006fd90849062000a7a565b90915550506002805460009062000718576200071862000ae3565b60009182526020822001546001600160a01b03169003620007745760405162461bcd60e51b81526020600482015260156024820152741d1bdad95b881a5cc81b9bdd0819195c1b1bde5959605a1b604482015260640162000258565b600060026000815481106200078d576200078d62000ae3565b6000918252602090912001546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116915081906340c10f1990604401600060405180830381600087803b158015620007e657600080fd5b505af1158015620007fb573d6000803e3d6000fd5b50505050806001600160a01b03166340c10f19620008216000546001600160a01b031690565b6200082e600a8662000ac0565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156200087557600080fd5b505af11580156200088a573d6000803e3d6000fd5b505050505050505050565b610db18062000afa83390190565b60008083601f840112620008b657600080fd5b50813567ffffffffffffffff811115620008cf57600080fd5b602083019150836020828501011115620008e857600080fd5b9250929050565b6000806000806000606086880312156200090857600080fd5b853567ffffffffffffffff808211156200092157600080fd5b6200092f89838a01620008a3565b909750955060208801359150808211156200094957600080fd5b506200095888828901620008a3565b96999598509660400135949350505050565b6000602082840312156200097d57600080fd5b5035919050565b6000602082840312156200099757600080fd5b81356001600160a01b0381168114620009af57600080fd5b9392505050565b60008060408385031215620009ca57600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600062000a18606083018789620009d9565b828103602084015262000a2d818688620009d9565b9150508260408301529695505050505050565b60006020828403121562000a5357600080fd5b81518015158114620009af57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115620004a757620004a762000a64565b8082028115828204841417620004a757620004a762000a64565b81810381811115620004a757620004a762000a64565b60008262000ade57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fdfe60806040523480156200001157600080fd5b5060405162000db138038062000db1833981016040819052620000349162000223565b8282600362000044838262000324565b50600462000053828262000324565b5050506200006833826200007160201b60201c565b50505062000418565b6001600160a01b038216620000cc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000e09190620003f0565b90915550506001600160a01b038216600090815260208190526040812080548392906200010f908490620003f0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018657600080fd5b81516001600160401b0380821115620001a357620001a36200015e565b604051601f8301601f19908116603f01168101908282118183101715620001ce57620001ce6200015e565b81604052838152602092508683858801011115620001eb57600080fd5b600091505b838210156200020f5785820183015181830184015290820190620001f0565b600093810190920192909252949350505050565b6000806000606084860312156200023957600080fd5b83516001600160401b03808211156200025157600080fd5b6200025f8783880162000174565b945060208601519150808211156200027657600080fd5b50620002858682870162000174565b925050604084015190509250925092565b600181811c90821680620002ab57607f821691505b602082108103620002cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015957600081815260208120601f850160051c81016020861015620002fb5750805b601f850160051c820191505b818110156200031c5782815560010162000307565b505050505050565b81516001600160401b038111156200034057620003406200015e565b620003588162000351845462000296565b84620002d2565b602080601f831160018114620003905760008415620003775750858301515b600019600386901b1c1916600185901b1785556200031c565b600085815260208120601f198616915b82811015620003c157888601518255948401946001909101908401620003a0565b5085821015620003e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200041257634e487b7160e01b600052601160045260246000fd5b92915050565b61098980620004286000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906107d3565b60405180910390f35b6100ea6100e536600461083d565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610867565b61026c565b604051601281526020016100ce565b6100ea61013c36600461083d565b610290565b61015461014f36600461083d565b6102b2565b005b6100fe6101643660046108a3565b6001600160a01b031660009081526020819052604090205490565b6100c16102c0565b6100ea61019536600461083d565b6102cf565b6100ea6101a836600461083d565b61034f565b6100fe6101bb3660046108c5565b61035d565b6060600380546101cf906108f8565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108f8565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610388565b60019150505b92915050565b60003361027a8582856104ac565b610285858585610526565b506001949350505050565b6000336102608185856102a3838361035d565b6102ad9190610932565b610388565b6102bc82826106f4565b5050565b6060600480546101cf906108f8565b600033816102dd828661035d565b9050838110156103425760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102858286868403610388565b600033610260818585610526565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610339565b6001600160a01b03821661044b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610339565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b8848461035d565b9050600019811461052057818110156105135760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610339565b6105208484848403610388565b50505050565b6001600160a01b03831661058a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610339565b6001600160a01b0382166105ec5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610339565b6001600160a01b038316600090815260208190526040902054818110156106645760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610339565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061069b908490610932565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e791815260200190565b60405180910390a3610520565b6001600160a01b03821661074a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610339565b806002600082825461075c9190610932565b90915550506001600160a01b03821660009081526020819052604081208054839290610789908490610932565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610800578581018301518582016040015282016107e4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461083857600080fd5b919050565b6000806040838503121561085057600080fd5b61085983610821565b946020939093013593505050565b60008060006060848603121561087c57600080fd5b61088584610821565b925061089360208501610821565b9150604084013590509250925092565b6000602082840312156108b557600080fd5b6108be82610821565b9392505050565b600080604083850312156108d857600080fd5b6108e183610821565b91506108ef60208401610821565b90509250929050565b600181811c9082168061090c57607f821691505b60208210810361092c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026657634e487b7160e01b600052601160045260246000fdfea2646970667358221220fd13d80d9deb7bf5e3ae19f97dd4530f15db4ae50242c5c6e6c23e1bff5ee78a64736f6c63430008110033a26469706673582212204531f12f499514c5f501dded0202b6ea0039d5a30822e7b8fe193b9af2cf4cd364736f6c63430008110033",
    "deployedSourceMap": "532:2482:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;692:451;;;;;;;;;;-1:-1:-1;692:451:6;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1325:32:8;;;1307:51;;1295:2;1280:18;692:451:6;;;;;;;;584:23;;;;;;;;;;-1:-1:-1;584:23:6;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;613:25:6;;;;;;;;;;;;;;;;;;;1700::8;;;1688:2;1673:18;613:25:6;1554:177:8;1159:49:6;;;;;;;;;;-1:-1:-1;1159:49:6;;;;;:::i;:::-;;;;;;;;;;;;;;2162:488;;;;;;;;;;-1:-1:-1;2162:488:6;;;;;:::i;:::-;;:::i;2770:109::-;;;;;;;;;;;;;:::i;1431:143::-;;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;692:451:6:-;824:7;851:10;;865:1;851:15;843:53;;;;-1:-1:-1;;;843:53:6;;2482:2:8;843:53:6;;;2464:21:8;2521:2;2501:18;;;2494:30;2560:27;2540:18;;;2533:55;2605:18;;843:53:6;;;;;;;;;906:11;930:5;;937:7;;946;920:34;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;964:35:6;;-1:-1:-1;;;964:35:6;;979:10;964:35;;;3593:51:8;3660:18;;;3653:34;;;906:48:6;;-1:-1:-1;;;;;;964:14:6;;;;;3566:18:8;;964:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1009:6:6;:27;;;;;;;;-1:-1:-1;1009:27:6;;;;;;;;;-1:-1:-1;;;;;;1009:27:6;-1:-1:-1;;;;;1009:27:6;;;;;1046:10;:15;;1009:27;;1046:10;;:15;;1009:27;;1046:15;:::i;:::-;;;;-1:-1:-1;;1076:29:6;;-1:-1:-1;;;;;1325:32:8;;1307:51;;1076:29:6;;1295:2:8;1280:18;1076:29:6;;;;;;;1130:5;692:451;-1:-1:-1;;;;;;692:451:6:o;584:23::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:23:6;;-1:-1:-1;584:23:6;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2162:488:6:-;2272:7;;;2351:28;2367:12;2351:13;:28;:::i;:::-;2329:50;;2393:13;2410:1;2393:18;2389:78;;2446:10;2427:29;;2389:78;2635:6;2587:17;:13;2603:1;2587:17;:::i;:::-;:26;;2607:6;2587:26;:::i;:::-;2558:15;:11;2572:1;2558:15;:::i;:::-;:24;;2576:6;2558:24;:::i;:::-;2557:57;;;;:::i;:::-;2556:86;;;;:::i;:::-;2524:119;;:16;:119;:::i;:::-;2505:138;;;;2162:488;;;;;:::o;2770:109::-;1094:13:0;:11;:13::i;:::-;2821:51:6::1;::::0;2829:10:::1;::::0;2850:21:::1;2821:51:::0;::::1;;;::::0;::::1;::::0;;;2850:21;2829:10;2821:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2770:109::o:0;1431:143::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;4972:2:8;2317:63:1;;;4954:21:8;5011:2;4991:18;;;4984:30;5050:33;5030:18;;;5023:61;5101:18;;2317:63:1;4770:355:8;2317:63:1;1744:1;2455:7;:18;1499:9:6::1;1491:41;;;::::0;-1:-1:-1;;;1491:41:6;;5332:2:8;1491:41:6::1;::::0;::::1;5314:21:8::0;5371:2;5351:18;;;5344:30;-1:-1:-1;;;5390:18:8;;;5383:45;5445:18;;1491:41:6::1;5130:339:8::0;1491:41:6::1;1542:25;:23;:25::i;:::-;1701:1:1::0;2628:22;;1431:143:6:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5676:2:8;2161:73:0::1;::::0;::::1;5658:21:8::0;5715:2;5695:18;;;5688:30;5754:34;5734:18;;;5727:62;-1:-1:-1;;;5805:18:8;;;5798:36;5851:19;;2161:73:0::1;5474:402:8::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6083:2:8;1414:68:0;;;6065:21:8;;;6102:18;;;6095:30;6161:34;6141:18;;;6134:62;6213:18;;1414:68:0;5881:356:8;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1580:576:6:-;1718:10;1634:32;1703:26;;;:14;:26;;;;;;1634:32;;1797:35;1703:26;1822:9;1797:10;:35::i;:::-;1857:10;1842:26;;;;:14;:26;;;;;:39;;1772:60;;-1:-1:-1;1872:9:6;;1842:26;;;:39;;1872:9;;1842:39;:::i;:::-;;;;-1:-1:-1;;1913:6:6;:9;;1920:1;;1913:9;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;1913:9:6;1899:23;;1891:57;;;;-1:-1:-1;;;1891:57:6;;6576:2:8;1891:57:6;;;6558:21:8;6615:2;6595:18;;;6588:30;-1:-1:-1;;;6634:18:8;;;6627:51;6695:18;;1891:57:6;6374:345:8;1891:57:6;1958:13;1980:6;1987:1;1980:9;;;;;;;;:::i;:::-;;;;;;;;;;;2001:40;;-1:-1:-1;;;2001:40:6;;2014:10;2001:40;;;3593:51:8;3660:18;;;3653:34;;;-1:-1:-1;;;;;1980:9:6;;;;-1:-1:-1;1980:9:6;;2001:12;;3566:18:8;;2001:40:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2051:7;-1:-1:-1;;;;;2051:12:6;;2064:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;2064:7:6;2073:19;2090:2;2073:14;:19;:::i;:::-;2051:42;;-1:-1:-1;;;;;;2051:42:6;;;;;;;-1:-1:-1;;;;;3611:32:8;;;2051:42:6;;;3593:51:8;3660:18;;;3653:34;3566:18;;2051:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:532;;;;;1580:576::o;-1:-1:-1:-;;;;;;;;:::o;14:348:8:-;66:8;76:6;130:3;123:4;115:6;111:17;107:27;97:55;;148:1;145;138:12;97:55;-1:-1:-1;171:20:8;;214:18;203:30;;200:50;;;246:1;243;236:12;200:50;283:4;275:6;271:17;259:29;;335:3;328:4;319:6;311;307:19;303:30;300:39;297:59;;;352:1;349;342:12;297:59;14:348;;;;;:::o;367:789::-;468:6;476;484;492;500;553:2;541:9;532:7;528:23;524:32;521:52;;;569:1;566;559:12;521:52;609:9;596:23;638:18;679:2;671:6;668:14;665:34;;;695:1;692;685:12;665:34;734:59;785:7;776:6;765:9;761:22;734:59;:::i;:::-;812:8;;-1:-1:-1;708:85:8;-1:-1:-1;900:2:8;885:18;;872:32;;-1:-1:-1;916:16:8;;;913:36;;;945:1;942;935:12;913:36;;984:61;1037:7;1026:8;1015:9;1011:24;984:61;:::i;:::-;367:789;;;;-1:-1:-1;1064:8:8;1146:2;1131:18;1118:32;;367:789;-1:-1:-1;;;;367:789:8:o;1369:180::-;1428:6;1481:2;1469:9;1460:7;1456:23;1452:32;1449:52;;;1497:1;1494;1487:12;1449:52;-1:-1:-1;1520:23:8;;1369:180;-1:-1:-1;1369:180:8:o;1736:286::-;1795:6;1848:2;1836:9;1827:7;1823:23;1819:32;1816:52;;;1864:1;1861;1854:12;1816:52;1890:23;;-1:-1:-1;;;;;1942:31:8;;1932:42;;1922:70;;1988:1;1985;1978:12;1922:70;2011:5;1736:286;-1:-1:-1;;;1736:286:8:o;2027:248::-;2095:6;2103;2156:2;2144:9;2135:7;2131:23;2127:32;2124:52;;;2172:1;2169;2162:12;2124:52;-1:-1:-1;;2195:23:8;;;2265:2;2250:18;;;2237:32;;-1:-1:-1;2027:248:8:o;2634:267::-;2723:6;2718:3;2711:19;2775:6;2768:5;2761:4;2756:3;2752:14;2739:43;-1:-1:-1;2827:1:8;2802:16;;;2820:4;2798:27;;;2791:38;;;;2883:2;2862:15;;;-1:-1:-1;;2858:29:8;2849:39;;;2845:50;;2634:267::o;2906:508::-;3151:2;3140:9;3133:21;3114:4;3177:62;3235:2;3224:9;3220:18;3212:6;3204;3177:62;:::i;:::-;3287:9;3279:6;3275:22;3270:2;3259:9;3255:18;3248:50;3315;3358:6;3350;3342;3315:50;:::i;:::-;3307:58;;;3401:6;3396:2;3385:9;3381:18;3374:34;2906:508;;;;;;;;:::o;3698:277::-;3765:6;3818:2;3806:9;3797:7;3793:23;3789:32;3786:52;;;3834:1;3831;3824:12;3786:52;3866:9;3860:16;3919:5;3912:13;3905:21;3898:5;3895:32;3885:60;;3941:1;3938;3931:12;3980:127;4041:10;4036:3;4032:20;4029:1;4022:31;4072:4;4069:1;4062:15;4096:4;4093:1;4086:15;4112:125;4177:9;;;4198:10;;;4195:36;;;4211:18;;:::i;4242:168::-;4315:9;;;4346;;4363:15;;;4357:22;;4343:37;4333:71;;4384:18;;:::i;4415:128::-;4482:9;;;4503:11;;;4500:37;;;4517:18;;:::i;4548:217::-;4588:1;4614;4604:132;;4658:10;4653:3;4649:20;4646:1;4639:31;4693:4;4690:1;4683:15;4721:4;4718:1;4711:15;4604:132;-1:-1:-1;4750:9:8;;4548:217::o;6242:127::-;6303:10;6298:3;6294:20;6291:1;6284:31;6334:4;6331:1;6324:15;6358:4;6355:1;6348:15",
    "language": "Solidity",
    "natspec": {
        "kind": "dev",
        "methods": {
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "version": 1
    },
    "offset": [
        532,
        3014
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x9D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE677D8C GT PUSH3 0x60 JUMPI DUP1 PUSH4 0xAE677D8C EQ PUSH3 0x16A JUMPI DUP1 PUSH4 0xB913EA38 EQ PUSH3 0x19B JUMPI DUP1 PUSH4 0xBCDB446B EQ PUSH3 0x1C0 JUMPI DUP1 PUSH4 0xD43BB807 EQ PUSH3 0x1D8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A93BABB EQ PUSH3 0xA2 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH3 0xE4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x109 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x123 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH3 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xC7 PUSH3 0xC1 CALLDATASIZE PUSH1 0x4 PUSH3 0x8EF JUMP JUMPDEST PUSH3 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xC7 PUSH3 0x103 CALLDATASIZE PUSH1 0x4 PUSH3 0x96A JUMP JUMPDEST PUSH3 0x3C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x121 PUSH3 0x3F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x15B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x15B PUSH3 0x189 CALLDATASIZE PUSH1 0x4 PUSH3 0x984 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x15B PUSH3 0x1BA CALLDATASIZE PUSH1 0x4 PUSH3 0x9B6 JUMP JUMPDEST PUSH3 0x40C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x121 PUSH3 0x4AD JUMP JUMPDEST PUSH3 0x121 PUSH3 0x4E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x121 PUSH3 0x201 CALLDATASIZE PUSH1 0x4 PUSH3 0x984 JUMP JUMPDEST PUSH3 0x591 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x0 EQ PUSH3 0x261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E2062652075736564206F6E6C79206F6E652074696D6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x276 SWAP1 PUSH3 0x895 JUMP JUMPDEST PUSH3 0x286 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x2A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x31B SWAP2 SWAP1 PUSH3 0xA40 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH3 0x37E SWAP1 DUP5 SWAP1 PUSH3 0xA7A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x91D24864A084AB70B268A1F865E757CA12006CF298D763B6BE697302EF86498C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH3 0x3FE PUSH3 0x60D JUMP JUMPDEST PUSH3 0x40A PUSH1 0x0 PUSH3 0x669 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH3 0x41C DUP5 DUP7 PUSH3 0xA7A JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x0 SUB PUSH3 0x433 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 POP JUMPDEST PUSH8 0x16345785D8A0000 PUSH3 0x449 DUP7 PUSH1 0x1 PUSH3 0xA90 JUMP JUMPDEST PUSH3 0x45D SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH3 0xA90 JUMP JUMPDEST PUSH3 0x46A DUP4 PUSH1 0x1 PUSH3 0xA90 JUMP JUMPDEST PUSH3 0x47E SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH3 0xA90 JUMP JUMPDEST PUSH3 0x48A SWAP2 SWAP1 PUSH3 0xAAA JUMP JUMPDEST PUSH3 0x496 SWAP2 SWAP1 PUSH3 0xAC0 JUMP JUMPDEST PUSH3 0x4A2 SWAP1 DUP4 PUSH3 0xA7A JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4B7 PUSH3 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH3 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x258 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLVALUE PUSH3 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x43616E6E6F7420646F6E617465203 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x258 JUMP JUMPDEST PUSH3 0x58B PUSH3 0x6B9 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH3 0x59B PUSH3 0x60D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x258 JUMP JUMPDEST PUSH3 0x4E4 DUP2 PUSH3 0x669 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x258 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 DUP1 PUSH3 0x6D7 DUP4 CALLVALUE PUSH3 0x40C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP CALLVALUE SWAP3 SWAP1 SWAP2 SWAP1 PUSH3 0x6FD SWAP1 DUP5 SWAP1 PUSH3 0xA7A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH3 0x718 JUMPI PUSH3 0x718 PUSH3 0xAE3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SUB PUSH3 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1D1BDAD95B881A5CC81B9BDD0819195C1B1BDE5959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x258 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH3 0x78D JUMPI PUSH3 0x78D PUSH3 0xAE3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x7FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH3 0x821 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x82E PUSH1 0xA DUP7 PUSH3 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x88A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDB1 DUP1 PUSH3 0xAFA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x8E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x92F DUP10 DUP4 DUP11 ADD PUSH3 0x8A3 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x958 DUP9 DUP3 DUP10 ADD PUSH3 0x8A3 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP7 PUSH1 0x40 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x97D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH3 0xA18 PUSH1 0x60 DUP4 ADD DUP8 DUP10 PUSH3 0x9D9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0xA2D DUP2 DUP7 DUP9 PUSH3 0x9D9 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x4A7 JUMPI PUSH3 0x4A7 PUSH3 0xA64 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x4A7 JUMPI PUSH3 0x4A7 PUSH3 0xA64 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x4A7 JUMPI PUSH3 0x4A7 PUSH3 0xA64 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xADE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xDB1 CODESIZE SUB DUP1 PUSH3 0xDB1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x223 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x324 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x324 JUMP JUMPDEST POP POP POP PUSH3 0x68 CALLER DUP3 PUSH3 0x71 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x418 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xE0 SWAP2 SWAP1 PUSH3 0x3F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x10F SWAP1 DUP5 SWAP1 PUSH3 0x3F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A3 PUSH3 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1CE JUMPI PUSH3 0x1CE PUSH3 0x15E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x20F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1F0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x25F DUP8 DUP4 DUP9 ADD PUSH3 0x174 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x285 DUP7 DUP3 DUP8 ADD PUSH3 0x174 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x159 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2FB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x31C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x307 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x340 JUMPI PUSH3 0x340 PUSH3 0x15E JUMP JUMPDEST PUSH3 0x358 DUP2 PUSH3 0x351 DUP5 SLOAD PUSH3 0x296 JUMP JUMPDEST DUP5 PUSH3 0x2D2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x390 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x377 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x31C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3A0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3E0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x412 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x989 DUP1 PUSH3 0x428 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x8F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x8F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27A DUP6 DUP3 DUP6 PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x285 DUP6 DUP6 DUP6 PUSH2 0x526 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x35D JUMP JUMPDEST PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH2 0x2BC DUP3 DUP3 PUSH2 0x6F4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2DD DUP3 DUP7 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x285 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B8 DUP5 DUP5 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x520 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH2 0x520 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x388 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x69B SWAP1 DUP5 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6E7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x75C SWAP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x789 SWAP1 DUP5 SWAP1 PUSH2 0x932 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x800 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x859 DUP4 PUSH2 0x821 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x885 DUP5 PUSH2 0x821 JUMP JUMPDEST SWAP3 POP PUSH2 0x893 PUSH1 0x20 DUP6 ADD PUSH2 0x821 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8BE DUP3 PUSH2 0x821 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E1 DUP4 PUSH2 0x821 JUMP JUMPDEST SWAP2 POP PUSH2 0x8EF PUSH1 0x20 DUP5 ADD PUSH2 0x821 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x90C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x92C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT SGT 0xD8 0xD SWAP14 0xEB PUSH28 0xF5E3AE19F97DD4530F15DB4AE50242C5C6E6C23E1BFF5EE78A64736F PUSH13 0x63430008110033A26469706673 PC 0x22 SLT KECCAK256 GASLIMIT BALANCE CALL 0x2F 0x49 SWAP6 EQ 0xC5 CREATE2 ADD 0xDD 0xED MUL MUL 0xB6 0xEA STOP CODECOPY 0xD5 LOG3 ADDMOD 0x22 0xE7 0xB8 INVALID NOT EXTCODESIZE SWAP11 CALLCODE 0xCF 0x4C 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
    "pcMap": {
        "0": {
            "offset": [
                532,
                3014
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x80"
        },
        "2": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "4": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "5": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "7": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "CALLDATASIZE",
            "path": "6"
        },
        "8": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "LT",
            "path": "6"
        },
        "9": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x9D"
        },
        "13": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "14": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "16": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "CALLDATALOAD",
            "path": "6"
        },
        "17": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0xE0"
        },
        "19": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "SHR",
            "path": "6"
        },
        "20": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "21": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0xAE677D8C"
        },
        "26": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "GT",
            "path": "6"
        },
        "27": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x60"
        },
        "31": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "32": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "33": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0xAE677D8C"
        },
        "38": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "39": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x16A"
        },
        "43": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "44": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "45": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0xB913EA38"
        },
        "50": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "51": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x19B"
        },
        "55": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "56": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "57": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0xBCDB446B"
        },
        "62": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "63": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x1C0"
        },
        "67": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "68": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "69": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0xD43BB807"
        },
        "74": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "75": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x1D8"
        },
        "79": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "80": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "81": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0xF2FDE38B"
        },
        "86": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "87": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x1E2"
        },
        "91": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "92": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "94": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "95": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "REVERT",
            "path": "6"
        },
        "96": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "97": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "98": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0x3A93BABB"
        },
        "103": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "104": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA2"
        },
        "108": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "109": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "110": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0x4F64B2BE"
        },
        "115": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "116": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xE4"
        },
        "120": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "121": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "122": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0x715018A6"
        },
        "127": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "128": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x109"
        },
        "132": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "133": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "134": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0x8DA5CB5B"
        },
        "139": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "140": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x123"
        },
        "144": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "145": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "146": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0x9F181B5E"
        },
        "151": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "EQ",
            "path": "6"
        },
        "152": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x143"
        },
        "156": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "157": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "158": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "160": {
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "DUP1",
            "path": "6"
        },
        "161": {
            "first_revert": true,
            "fn": null,
            "offset": [
                532,
                3014
            ],
            "op": "REVERT",
            "path": "6"
        },
        "162": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "163": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "164": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "DUP1",
            "path": "6"
        },
        "165": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "166": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xAF"
        },
        "170": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "171": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "173": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "DUP1",
            "path": "6"
        },
        "174": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "REVERT",
            "path": "6"
        },
        "175": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "176": {
            "op": "POP"
        },
        "177": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xC7"
        },
        "181": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xC1"
        },
        "185": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "CALLDATASIZE",
            "path": "6"
        },
        "186": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "188": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x8EF"
        },
        "192": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                692,
                1143
            ],
            "op": "JUMP",
            "path": "6"
        },
        "193": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "194": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x207"
        },
        "198": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                692,
                1143
            ],
            "op": "JUMP",
            "path": "6"
        },
        "199": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "200": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "202": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "203": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "205": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "207": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "209": {
            "op": "SHL"
        },
        "210": {
            "op": "SUB"
        },
        "211": {
            "op": "SWAP1"
        },
        "212": {
            "op": "SWAP2"
        },
        "213": {
            "op": "AND"
        },
        "214": {
            "op": "DUP2"
        },
        "215": {
            "op": "MSTORE"
        },
        "216": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "218": {
            "op": "ADD"
        },
        "219": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "220": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "222": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "223": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "DUP1",
            "path": "6"
        },
        "224": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "225": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "SUB",
            "path": "6"
        },
        "226": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "227": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "RETURN",
            "path": "6"
        },
        "228": {
            "offset": [
                584,
                607
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "229": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "230": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "DUP1",
            "path": "6"
        },
        "231": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "232": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xF1"
        },
        "236": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "237": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "239": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "DUP1",
            "path": "6"
        },
        "240": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "REVERT",
            "path": "6"
        },
        "241": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "242": {
            "op": "POP"
        },
        "243": {
            "offset": [
                584,
                607
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xC7"
        },
        "247": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x103"
        },
        "251": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "CALLDATASIZE",
            "path": "6"
        },
        "252": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "254": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x96A"
        },
        "258": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                584,
                607
            ],
            "op": "JUMP",
            "path": "6"
        },
        "259": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "260": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x3C9"
        },
        "264": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                584,
                607
            ],
            "op": "JUMP",
            "path": "6"
        },
        "265": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "266": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "CALLVALUE",
            "path": "0"
        },
        "267": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "DUP1",
            "path": "0"
        },
        "268": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "ISZERO",
            "path": "0"
        },
        "269": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x116"
        },
        "273": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "274": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "276": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "DUP1",
            "path": "0"
        },
        "277": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "REVERT",
            "path": "0"
        },
        "278": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "279": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "POP",
            "path": "0"
        },
        "280": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x121"
        },
        "284": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x3F4"
        },
        "288": {
            "fn": "Ownable.renounceOwnership",
            "jump": "i",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMP",
            "path": "0"
        },
        "289": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "290": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "STOP",
            "path": "0"
        },
        "291": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "292": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "CALLVALUE",
            "path": "0"
        },
        "293": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "DUP1",
            "path": "0"
        },
        "294": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "ISZERO",
            "path": "0"
        },
        "295": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x130"
        },
        "299": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "300": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "302": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "DUP1",
            "path": "0"
        },
        "303": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "REVERT",
            "path": "0"
        },
        "304": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "305": {
            "op": "POP"
        },
        "306": {
            "fn": "Ownable.owner",
            "offset": [
                1247,
                1254
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "308": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SLOAD",
            "path": "0",
            "statement": 0
        },
        "309": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "311": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "313": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "315": {
            "op": "SHL"
        },
        "316": {
            "op": "SUB"
        },
        "317": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "AND",
            "path": "0"
        },
        "318": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0xC7"
        },
        "322": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMP",
            "path": "0"
        },
        "323": {
            "offset": [
                613,
                638
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "324": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "325": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "DUP1",
            "path": "6"
        },
        "326": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "327": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x150"
        },
        "331": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "332": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "334": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "DUP1",
            "path": "6"
        },
        "335": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "REVERT",
            "path": "6"
        },
        "336": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "337": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "POP",
            "path": "6"
        },
        "338": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x15B"
        },
        "342": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x3"
        },
        "344": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "345": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "DUP2",
            "path": "6"
        },
        "346": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "JUMP",
            "path": "6"
        },
        "347": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "348": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "350": {
            "fn": "Ownable.owner",
            "offset": [
                613,
                638
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "351": {
            "op": "SWAP1"
        },
        "352": {
            "op": "DUP2"
        },
        "353": {
            "op": "MSTORE"
        },
        "354": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "356": {
            "op": "ADD"
        },
        "357": {
            "offset": [
                613,
                638
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xDB"
        },
        "361": {
            "op": "JUMP"
        },
        "362": {
            "offset": [
                1159,
                1208
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "363": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "364": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "DUP1",
            "path": "6"
        },
        "365": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "366": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x177"
        },
        "370": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "371": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "373": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "DUP1",
            "path": "6"
        },
        "374": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "REVERT",
            "path": "6"
        },
        "375": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "376": {
            "op": "POP"
        },
        "377": {
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x15B"
        },
        "381": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x189"
        },
        "385": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "CALLDATASIZE",
            "path": "6"
        },
        "386": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "388": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x984"
        },
        "392": {
            "fn": "Ownable.owner",
            "jump": "i",
            "offset": [
                1159,
                1208
            ],
            "op": "JUMP",
            "path": "6"
        },
        "393": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "394": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "396": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x20"
        },
        "398": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "399": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "401": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "402": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "DUP2",
            "path": "6"
        },
        "403": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "404": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "406": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "407": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "KECCAK256",
            "path": "6"
        },
        "408": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "409": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "DUP2",
            "path": "6"
        },
        "410": {
            "fn": "Ownable.owner",
            "offset": [
                1159,
                1208
            ],
            "op": "JUMP",
            "path": "6"
        },
        "411": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "412": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "413": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "DUP1",
            "path": "6"
        },
        "414": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "415": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x1A8"
        },
        "419": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "420": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "422": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "DUP1",
            "path": "6"
        },
        "423": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "REVERT",
            "path": "6"
        },
        "424": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "425": {
            "op": "POP"
        },
        "426": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x15B"
        },
        "430": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x1BA"
        },
        "434": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "CALLDATASIZE",
            "path": "6"
        },
        "435": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "437": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x9B6"
        },
        "441": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMP",
            "path": "6"
        },
        "442": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "443": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x40C"
        },
        "447": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMP",
            "path": "6"
        },
        "448": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "449": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "450": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "DUP1",
            "path": "6"
        },
        "451": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "452": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x1CD"
        },
        "456": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "457": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "459": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "DUP1",
            "path": "6"
        },
        "460": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "REVERT",
            "path": "6"
        },
        "461": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "462": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "POP",
            "path": "6"
        },
        "463": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x121"
        },
        "467": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x4AD"
        },
        "471": {
            "fn": "Donation.recoverEth",
            "jump": "i",
            "offset": [
                2770,
                2879
            ],
            "op": "JUMP",
            "path": "6"
        },
        "472": {
            "fn": "Donation.donateHere",
            "offset": [
                1431,
                1574
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "473": {
            "fn": "Donation.donateHere",
            "offset": [
                1431,
                1574
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x121"
        },
        "477": {
            "fn": "Donation.donateHere",
            "offset": [
                1431,
                1574
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x4E7"
        },
        "481": {
            "fn": "Donation.donateHere",
            "jump": "i",
            "offset": [
                1431,
                1574
            ],
            "op": "JUMP",
            "path": "6"
        },
        "482": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "483": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "CALLVALUE",
            "path": "0"
        },
        "484": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "DUP1",
            "path": "0"
        },
        "485": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "ISZERO",
            "path": "0"
        },
        "486": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x1EF"
        },
        "490": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "491": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "493": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "DUP1",
            "path": "0"
        },
        "494": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "REVERT",
            "path": "0"
        },
        "495": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "496": {
            "op": "POP"
        },
        "497": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x121"
        },
        "501": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x201"
        },
        "505": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "CALLDATASIZE",
            "path": "0"
        },
        "506": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "508": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x984"
        },
        "512": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMP",
            "path": "0"
        },
        "513": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "514": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x591"
        },
        "518": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMP",
            "path": "0"
        },
        "519": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "520": {
            "fn": "Donation.deployToken",
            "offset": [
                824,
                831
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "522": {
            "fn": "Donation.deployToken",
            "offset": [
                851,
                861
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 1,
            "value": "0x3"
        },
        "524": {
            "fn": "Donation.deployToken",
            "offset": [
                851,
                861
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "525": {
            "fn": "Donation.deployToken",
            "offset": [
                865,
                866
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "527": {
            "branch": 23,
            "fn": "Donation.deployToken",
            "offset": [
                851,
                866
            ],
            "op": "EQ",
            "path": "6"
        },
        "528": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x261"
        },
        "532": {
            "branch": 23,
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "533": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "535": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "536": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "540": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "542": {
            "op": "SHL"
        },
        "543": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "DUP2",
            "path": "6"
        },
        "544": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "545": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "547": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "549": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "DUP3",
            "path": "6"
        },
        "550": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "ADD",
            "path": "6"
        },
        "551": {
            "op": "MSTORE"
        },
        "552": {
            "op": "PUSH1",
            "value": "0x19"
        },
        "554": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "556": {
            "op": "DUP3"
        },
        "557": {
            "op": "ADD"
        },
        "558": {
            "op": "MSTORE"
        },
        "559": {
            "op": "PUSH32",
            "value": "0x63616E2062652075736564206F6E6C79206F6E652074696D6500000000000000"
        },
        "592": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "594": {
            "op": "DUP3"
        },
        "595": {
            "op": "ADD"
        },
        "596": {
            "op": "MSTORE"
        },
        "597": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "599": {
            "op": "ADD"
        },
        "600": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "601": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "603": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "604": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "DUP1",
            "path": "6"
        },
        "605": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "606": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "SUB",
            "path": "6"
        },
        "607": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "608": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "REVERT",
            "optimizer_revert": true,
            "path": "6"
        },
        "609": {
            "fn": "Donation.deployToken",
            "offset": [
                843,
                896
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "610": {
            "fn": "Donation.deployToken",
            "offset": [
                906,
                917
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "612": {
            "fn": "Donation.deployToken",
            "offset": [
                930,
                935
            ],
            "op": "DUP7",
            "path": "6"
        },
        "613": {
            "fn": "Donation.deployToken",
            "offset": [
                930,
                935
            ],
            "op": "DUP7",
            "path": "6"
        },
        "614": {
            "fn": "Donation.deployToken",
            "offset": [
                937,
                944
            ],
            "op": "DUP7",
            "path": "6"
        },
        "615": {
            "fn": "Donation.deployToken",
            "offset": [
                937,
                944
            ],
            "op": "DUP7",
            "path": "6"
        },
        "616": {
            "fn": "Donation.deployToken",
            "offset": [
                946,
                953
            ],
            "op": "DUP7",
            "path": "6"
        },
        "617": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "619": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "620": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x276"
        },
        "624": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "625": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x895"
        },
        "629": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                920,
                954
            ],
            "op": "JUMP",
            "path": "6"
        },
        "630": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "631": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x286"
        },
        "635": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP6",
            "path": "6"
        },
        "636": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP5",
            "path": "6"
        },
        "637": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP4",
            "path": "6"
        },
        "638": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP3",
            "path": "6"
        },
        "639": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "640": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "641": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA02"
        },
        "645": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                920,
                954
            ],
            "op": "JUMP",
            "path": "6"
        },
        "646": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "647": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "649": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "650": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "DUP1",
            "path": "6"
        },
        "651": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "652": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SUB",
            "path": "6"
        },
        "653": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "654": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "656": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "CREATE",
            "path": "6"
        },
        "657": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "DUP1",
            "path": "6"
        },
        "658": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "659": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "DUP1",
            "path": "6"
        },
        "660": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "661": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x2A3"
        },
        "665": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "666": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "667": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "669": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "DUP1",
            "path": "6"
        },
        "670": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "RETURNDATACOPY",
            "path": "6"
        },
        "671": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "672": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "674": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "REVERT",
            "path": "6"
        },
        "675": {
            "fn": "Donation.deployToken",
            "offset": [
                920,
                954
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "676": {
            "op": "POP"
        },
        "677": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 2,
            "value": "0x40"
        },
        "679": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "680": {
            "op": "PUSH4",
            "value": "0xA9059CBB"
        },
        "685": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "687": {
            "op": "SHL"
        },
        "688": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP2",
            "path": "6"
        },
        "689": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "690": {
            "fn": "Donation.deployToken",
            "offset": [
                979,
                989
            ],
            "op": "CALLER",
            "path": "6"
        },
        "691": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "693": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP3",
            "path": "6"
        },
        "694": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "ADD",
            "path": "6"
        },
        "695": {
            "op": "MSTORE"
        },
        "696": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "698": {
            "op": "DUP2"
        },
        "699": {
            "op": "ADD"
        },
        "700": {
            "op": "DUP6"
        },
        "701": {
            "op": "SWAP1"
        },
        "702": {
            "op": "MSTORE"
        },
        "703": {
            "fn": "Donation.deployToken",
            "offset": [
                906,
                954
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "704": {
            "fn": "Donation.deployToken",
            "offset": [
                906,
                954
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "705": {
            "op": "POP"
        },
        "706": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "708": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "710": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "712": {
            "op": "SHL"
        },
        "713": {
            "op": "SUB"
        },
        "714": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                978
            ],
            "op": "DUP3",
            "path": "6"
        },
        "715": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                978
            ],
            "op": "AND",
            "path": "6"
        },
        "716": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                978
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "717": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                978
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0xA9059CBB"
        },
        "722": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                978
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "723": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "725": {
            "op": "ADD"
        },
        "726": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x20"
        },
        "728": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "730": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "731": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP1",
            "path": "6"
        },
        "732": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP4",
            "path": "6"
        },
        "733": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "SUB",
            "path": "6"
        },
        "734": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP2",
            "path": "6"
        },
        "735": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "737": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP8",
            "path": "6"
        },
        "738": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "GAS",
            "path": "6"
        },
        "739": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "CALL",
            "path": "6"
        },
        "740": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "741": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP1",
            "path": "6"
        },
        "742": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "743": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x2F5"
        },
        "747": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "748": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "749": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "751": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP1",
            "path": "6"
        },
        "752": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "RETURNDATACOPY",
            "path": "6"
        },
        "753": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "754": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "756": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "REVERT",
            "path": "6"
        },
        "757": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "758": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "POP",
            "path": "6"
        },
        "759": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "POP",
            "path": "6"
        },
        "760": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "POP",
            "path": "6"
        },
        "761": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "POP",
            "path": "6"
        },
        "762": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "764": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "765": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "766": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x1F"
        },
        "768": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "NOT",
            "path": "6"
        },
        "769": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x1F"
        },
        "771": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP3",
            "path": "6"
        },
        "772": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "ADD",
            "path": "6"
        },
        "773": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "AND",
            "path": "6"
        },
        "774": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP3",
            "path": "6"
        },
        "775": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "ADD",
            "path": "6"
        },
        "776": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP1",
            "path": "6"
        },
        "777": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "779": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "780": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "POP",
            "path": "6"
        },
        "781": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "DUP2",
            "path": "6"
        },
        "782": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "ADD",
            "path": "6"
        },
        "783": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "784": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x31B"
        },
        "788": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "789": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "790": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA40"
        },
        "794": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                964,
                999
            ],
            "op": "JUMP",
            "path": "6"
        },
        "795": {
            "fn": "Donation.deployToken",
            "offset": [
                964,
                999
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "796": {
            "op": "POP"
        },
        "797": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1015
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 3,
            "value": "0x2"
        },
        "799": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP1",
            "path": "6"
        },
        "800": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "801": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x1"
        },
        "803": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP1",
            "path": "6"
        },
        "804": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP3",
            "path": "6"
        },
        "805": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "ADD",
            "path": "6"
        },
        "806": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP4",
            "path": "6"
        },
        "807": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SSTORE",
            "path": "6"
        },
        "808": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "810": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SWAP3",
            "path": "6"
        },
        "811": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP4",
            "path": "6"
        },
        "812": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "813": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "PUSH32",
            "path": "6",
            "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
        },
        "846": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "847": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "848": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "ADD",
            "path": "6"
        },
        "849": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP1",
            "path": "6"
        },
        "850": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "851": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "853": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "855": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "857": {
            "op": "SHL"
        },
        "858": {
            "op": "SUB"
        },
        "859": {
            "op": "NOT"
        },
        "860": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "AND",
            "path": "6"
        },
        "861": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "863": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "865": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "867": {
            "op": "SHL"
        },
        "868": {
            "op": "SUB"
        },
        "869": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP6",
            "path": "6"
        },
        "870": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "AND",
            "path": "6"
        },
        "871": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "OR",
            "path": "6"
        },
        "872": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "873": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SSTORE",
            "path": "6"
        },
        "874": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1056
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 4,
            "value": "0x3"
        },
        "876": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "DUP1",
            "path": "6"
        },
        "877": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "878": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "879": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SWAP3",
            "path": "6"
        },
        "880": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1056
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "881": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1056
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "882": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x37E"
        },
        "886": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "887": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "DUP5",
            "path": "6"
        },
        "888": {
            "fn": "Donation.deployToken",
            "offset": [
                1009,
                1036
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "889": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA7A"
        },
        "893": {
            "fn": "Donation.deployToken",
            "jump": "i",
            "offset": [
                1046,
                1061
            ],
            "op": "JUMP",
            "path": "6"
        },
        "894": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "895": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "896": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "897": {
            "fn": "Donation.deployToken",
            "offset": [
                1046,
                1061
            ],
            "op": "SSTORE",
            "path": "6"
        },
        "898": {
            "op": "POP"
        },
        "899": {
            "op": "POP"
        },
        "900": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 5,
            "value": "0x40"
        },
        "902": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "903": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "905": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "907": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "909": {
            "op": "SHL"
        },
        "910": {
            "op": "SUB"
        },
        "911": {
            "op": "DUP3"
        },
        "912": {
            "op": "AND"
        },
        "913": {
            "op": "DUP2"
        },
        "914": {
            "op": "MSTORE"
        },
        "915": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "PUSH32",
            "path": "6",
            "value": "0x91D24864A084AB70B268A1F865E757CA12006CF298D763B6BE697302EF86498C"
        },
        "948": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "949": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "951": {
            "op": "ADD"
        },
        "952": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "954": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "955": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "DUP1",
            "path": "6"
        },
        "956": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "957": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "SUB",
            "path": "6"
        },
        "958": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "959": {
            "fn": "Donation.deployToken",
            "offset": [
                1076,
                1105
            ],
            "op": "LOG1",
            "path": "6"
        },
        "960": {
            "fn": "Donation.deployToken",
            "offset": [
                1130,
                1135
            ],
            "op": "SWAP7",
            "path": "6",
            "statement": 6
        },
        "961": {
            "fn": "Donation.deployToken",
            "offset": [
                692,
                1143
            ],
            "op": "SWAP6",
            "path": "6"
        },
        "962": {
            "op": "POP"
        },
        "963": {
            "op": "POP"
        },
        "964": {
            "op": "POP"
        },
        "965": {
            "op": "POP"
        },
        "966": {
            "op": "POP"
        },
        "967": {
            "op": "POP"
        },
        "968": {
            "fn": "Donation.deployToken",
            "jump": "o",
            "offset": [
                692,
                1143
            ],
            "op": "JUMP",
            "path": "6"
        },
        "969": {
            "offset": [
                584,
                607
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "970": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x2"
        },
        "972": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "DUP2",
            "path": "6"
        },
        "973": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "DUP2",
            "path": "6"
        },
        "974": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "975": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "DUP2",
            "path": "6"
        },
        "976": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "LT",
            "path": "6"
        },
        "977": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x3DA"
        },
        "981": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "982": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "984": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "DUP1",
            "path": "6"
        },
        "985": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "REVERT",
            "path": "6"
        },
        "986": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "987": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "989": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "990": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "DUP3",
            "path": "6"
        },
        "991": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "992": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x20"
        },
        "994": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "995": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "996": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "KECCAK256",
            "path": "6"
        },
        "997": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "ADD",
            "path": "6"
        },
        "998": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "999": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1001": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1003": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1005": {
            "op": "SHL"
        },
        "1006": {
            "op": "SUB"
        },
        "1007": {
            "offset": [
                584,
                607
            ],
            "op": "AND",
            "path": "6"
        },
        "1008": {
            "fn": "Donation.deployToken",
            "offset": [
                584,
                607
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1009": {
            "op": "POP"
        },
        "1010": {
            "offset": [
                584,
                607
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1011": {
            "fn": "Donation.deployToken",
            "jump": "o",
            "offset": [
                584,
                607
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1012": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1013": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x3FE"
        },
        "1017": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x60D"
        },
        "1021": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1022": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1023": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1895,
                1925
            ],
            "op": "PUSH3",
            "path": "0",
            "statement": 7,
            "value": "0x40A"
        },
        "1027": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1922,
                1923
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1029": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1895,
                1913
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x669"
        },
        "1033": {
            "fn": "Ownable.renounceOwnership",
            "jump": "i",
            "offset": [
                1895,
                1925
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1034": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1895,
                1925
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1035": {
            "fn": "Ownable.renounceOwnership",
            "jump": "o",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1036": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1037": {
            "fn": "Donation.findIssued",
            "offset": [
                2272,
                2279
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1039": {
            "fn": "Donation.findIssued",
            "offset": [
                2272,
                2279
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1040": {
            "fn": "Donation.findIssued",
            "offset": [
                2272,
                2279
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1041": {
            "fn": "Donation.findIssued",
            "offset": [
                2351,
                2379
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x41C"
        },
        "1045": {
            "fn": "Donation.findIssued",
            "offset": [
                2367,
                2379
            ],
            "op": "DUP5",
            "path": "6"
        },
        "1046": {
            "fn": "Donation.findIssued",
            "offset": [
                2351,
                2364
            ],
            "op": "DUP7",
            "path": "6"
        },
        "1047": {
            "fn": "Donation.findIssued",
            "offset": [
                2351,
                2379
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA7A"
        },
        "1051": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2351,
                2379
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1052": {
            "fn": "Donation.findIssued",
            "offset": [
                2351,
                2379
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1053": {
            "fn": "Donation.findIssued",
            "offset": [
                2329,
                2379
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1054": {
            "fn": "Donation.findIssued",
            "offset": [
                2329,
                2379
            ],
            "op": "POP",
            "path": "6"
        },
        "1055": {
            "fn": "Donation.findIssued",
            "offset": [
                2393,
                2406
            ],
            "op": "DUP5",
            "path": "6"
        },
        "1056": {
            "fn": "Donation.findIssued",
            "offset": [
                2410,
                2411
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1058": {
            "branch": 24,
            "fn": "Donation.findIssued",
            "offset": [
                2393,
                2411
            ],
            "op": "SUB",
            "path": "6"
        },
        "1059": {
            "fn": "Donation.findIssued",
            "offset": [
                2389,
                2467
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x433"
        },
        "1063": {
            "branch": 24,
            "fn": "Donation.findIssued",
            "offset": [
                2389,
                2467
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "1064": {
            "fn": "Donation.findIssued",
            "offset": [
                2446,
                2456
            ],
            "op": "PUSH8",
            "path": "6",
            "statement": 8,
            "value": "0xDE0B6B3A7640000"
        },
        "1073": {
            "fn": "Donation.findIssued",
            "offset": [
                2427,
                2456
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1074": {
            "fn": "Donation.findIssued",
            "offset": [
                2427,
                2456
            ],
            "op": "POP",
            "path": "6"
        },
        "1075": {
            "fn": "Donation.findIssued",
            "offset": [
                2389,
                2467
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1076": {
            "fn": "Donation.findIssued",
            "offset": [
                2635,
                2641
            ],
            "op": "PUSH8",
            "path": "6",
            "statement": 9,
            "value": "0x16345785D8A0000"
        },
        "1085": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2604
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x449"
        },
        "1089": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2600
            ],
            "op": "DUP7",
            "path": "6"
        },
        "1090": {
            "fn": "Donation.findIssued",
            "offset": [
                2603,
                2604
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x1"
        },
        "1092": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2604
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA90"
        },
        "1096": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2587,
                2604
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1097": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2604
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1098": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2613
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x45D"
        },
        "1102": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2613
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1103": {
            "fn": "Donation.findIssued",
            "offset": [
                2607,
                2613
            ],
            "op": "PUSH8",
            "path": "6",
            "value": "0xDE0B6B3A7640000"
        },
        "1112": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2613
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA90"
        },
        "1116": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2587,
                2613
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1117": {
            "fn": "Donation.findIssued",
            "offset": [
                2587,
                2613
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1118": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2573
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x46A"
        },
        "1122": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2569
            ],
            "op": "DUP4",
            "path": "6"
        },
        "1123": {
            "fn": "Donation.findIssued",
            "offset": [
                2572,
                2573
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x1"
        },
        "1125": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2573
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA90"
        },
        "1129": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2558,
                2573
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1130": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2573
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1131": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2582
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x47E"
        },
        "1135": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2582
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1136": {
            "fn": "Donation.findIssued",
            "offset": [
                2576,
                2582
            ],
            "op": "PUSH8",
            "path": "6",
            "value": "0xDE0B6B3A7640000"
        },
        "1145": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2582
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA90"
        },
        "1149": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2558,
                2582
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1150": {
            "fn": "Donation.findIssued",
            "offset": [
                2558,
                2582
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1151": {
            "fn": "Donation.findIssued",
            "offset": [
                2557,
                2614
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x48A"
        },
        "1155": {
            "fn": "Donation.findIssued",
            "offset": [
                2557,
                2614
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1156": {
            "fn": "Donation.findIssued",
            "offset": [
                2557,
                2614
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1157": {
            "fn": "Donation.findIssued",
            "offset": [
                2557,
                2614
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xAAA"
        },
        "1161": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2557,
                2614
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1162": {
            "fn": "Donation.findIssued",
            "offset": [
                2557,
                2614
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1163": {
            "fn": "Donation.findIssued",
            "offset": [
                2556,
                2642
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x496"
        },
        "1167": {
            "fn": "Donation.findIssued",
            "offset": [
                2556,
                2642
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1168": {
            "fn": "Donation.findIssued",
            "offset": [
                2556,
                2642
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1169": {
            "fn": "Donation.findIssued",
            "offset": [
                2556,
                2642
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xAC0"
        },
        "1173": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2556,
                2642
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1174": {
            "fn": "Donation.findIssued",
            "offset": [
                2556,
                2642
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1175": {
            "fn": "Donation.findIssued",
            "offset": [
                2524,
                2643
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x4A2"
        },
        "1179": {
            "fn": "Donation.findIssued",
            "offset": [
                2524,
                2643
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1180": {
            "fn": "Donation.findIssued",
            "offset": [
                2524,
                2540
            ],
            "op": "DUP4",
            "path": "6"
        },
        "1181": {
            "fn": "Donation.findIssued",
            "offset": [
                2524,
                2643
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA7A"
        },
        "1185": {
            "fn": "Donation.findIssued",
            "jump": "i",
            "offset": [
                2524,
                2643
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1186": {
            "fn": "Donation.findIssued",
            "offset": [
                2524,
                2643
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1187": {
            "fn": "Donation.findIssued",
            "offset": [
                2505,
                2643
            ],
            "op": "SWAP3",
            "path": "6"
        },
        "1188": {
            "fn": "Donation.findIssued",
            "offset": [
                2505,
                2643
            ],
            "op": "POP",
            "path": "6"
        },
        "1189": {
            "fn": "Donation.findIssued",
            "offset": [
                2505,
                2643
            ],
            "op": "POP",
            "path": "6"
        },
        "1190": {
            "fn": "Donation.findIssued",
            "offset": [
                2505,
                2643
            ],
            "op": "POP",
            "path": "6"
        },
        "1191": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1192": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "SWAP3",
            "path": "6"
        },
        "1193": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1194": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "POP",
            "path": "6"
        },
        "1195": {
            "fn": "Donation.findIssued",
            "offset": [
                2162,
                2650
            ],
            "op": "POP",
            "path": "6"
        },
        "1196": {
            "fn": "Donation.findIssued",
            "jump": "o",
            "offset": [
                2162,
                2650
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1197": {
            "fn": "Donation.recoverEth",
            "offset": [
                2770,
                2879
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1198": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x4B7"
        },
        "1202": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x60D"
        },
        "1206": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1207": {
            "fn": "Donation.recoverEth",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1208": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 10,
            "value": "0x40"
        },
        "1210": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "1211": {
            "fn": "Donation.recoverEth",
            "offset": [
                2829,
                2839
            ],
            "op": "CALLER",
            "path": "6"
        },
        "1212": {
            "fn": "Donation.recoverEth",
            "offset": [
                2829,
                2839
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1213": {
            "fn": "Donation.recoverEth",
            "offset": [
                2850,
                2871
            ],
            "op": "SELFBALANCE",
            "path": "6"
        },
        "1214": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1215": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "1216": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "PUSH2",
            "path": "6",
            "value": "0x8FC"
        },
        "1219": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "MUL",
            "path": "6"
        },
        "1220": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1221": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1223": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1224": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1225": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1226": {
            "fn": "Donation.recoverEth",
            "offset": [
                2850,
                2871
            ],
            "op": "DUP6",
            "path": "6"
        },
        "1227": {
            "fn": "Donation.recoverEth",
            "offset": [
                2829,
                2839
            ],
            "op": "DUP9",
            "path": "6"
        },
        "1228": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "DUP9",
            "path": "6"
        },
        "1229": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "CALL",
            "path": "6"
        },
        "1230": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "SWAP4",
            "path": "6"
        },
        "1231": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "POP",
            "path": "6"
        },
        "1232": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "POP",
            "path": "6"
        },
        "1233": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "POP",
            "path": "6"
        },
        "1234": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "POP",
            "path": "6"
        },
        "1235": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "1236": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1237": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "1238": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x4E4"
        },
        "1242": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "1243": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "1244": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1246": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1247": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "RETURNDATACOPY",
            "path": "6"
        },
        "1248": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "1249": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1251": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "REVERT",
            "path": "6"
        },
        "1252": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1253": {
            "fn": "Donation.recoverEth",
            "offset": [
                2821,
                2872
            ],
            "op": "POP",
            "path": "6"
        },
        "1254": {
            "fn": "Donation.recoverEth",
            "jump": "o",
            "offset": [
                2770,
                2879
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1255": {
            "fn": "Donation.donateHere",
            "offset": [
                1431,
                1574
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1256": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "1258": {
            "offset": [
                2325,
                2332
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "1260": {
            "fn": "Donation.donateHere",
            "offset": [
                2325,
                2332
            ],
            "op": "SLOAD",
            "path": "1"
        },
        "1261": {
            "offset": [
                2325,
                2344
            ],
            "op": "SUB",
            "path": "1"
        },
        "1262": {
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH3",
            "path": "1",
            "value": "0x53B"
        },
        "1266": {
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPI",
            "path": "1"
        },
        "1267": {
            "fn": "Donation.donateHere",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x40"
        },
        "1269": {
            "fn": "Donation.donateHere",
            "offset": [
                2317,
                2380
            ],
            "op": "MLOAD",
            "path": "1"
        },
        "1270": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1274": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1276": {
            "op": "SHL"
        },
        "1277": {
            "offset": [
                2317,
                2380
            ],
            "op": "DUP2",
            "path": "1"
        },
        "1278": {
            "fn": "Donation.donateHere",
            "offset": [
                2317,
                2380
            ],
            "op": "MSTORE",
            "path": "1"
        },
        "1279": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1281": {
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x4"
        },
        "1283": {
            "fn": "Donation.donateHere",
            "offset": [
                2317,
                2380
            ],
            "op": "DUP3",
            "path": "1"
        },
        "1284": {
            "fn": "Donation.donateHere",
            "offset": [
                2317,
                2380
            ],
            "op": "ADD",
            "path": "1"
        },
        "1285": {
            "op": "MSTORE"
        },
        "1286": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "1288": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1290": {
            "op": "DUP3"
        },
        "1291": {
            "op": "ADD"
        },
        "1292": {
            "op": "MSTORE"
        },
        "1293": {
            "op": "PUSH32",
            "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
        },
        "1326": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1328": {
            "op": "DUP3"
        },
        "1329": {
            "op": "ADD"
        },
        "1330": {
            "op": "MSTORE"
        },
        "1331": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1333": {
            "op": "ADD"
        },
        "1334": {
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH3",
            "path": "1",
            "value": "0x258"
        },
        "1338": {
            "op": "JUMP"
        },
        "1339": {
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPDEST",
            "path": "1"
        },
        "1340": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "1342": {
            "offset": [
                2455,
                2462
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "1344": {
            "offset": [
                2455,
                2473
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "1345": {
            "fn": "Donation.donateHere",
            "offset": [
                1499,
                1508
            ],
            "op": "CALLVALUE",
            "path": "6",
            "statement": 11
        },
        "1346": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x581"
        },
        "1350": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "1351": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "1353": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "1354": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1358": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1360": {
            "op": "SHL"
        },
        "1361": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1362": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1363": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1365": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "1367": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "DUP3",
            "path": "6"
        },
        "1368": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "ADD",
            "path": "6"
        },
        "1369": {
            "op": "MSTORE"
        },
        "1370": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "1372": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1374": {
            "op": "DUP3"
        },
        "1375": {
            "op": "ADD"
        },
        "1376": {
            "op": "MSTORE"
        },
        "1377": {
            "op": "PUSH15",
            "value": "0x43616E6E6F7420646F6E617465203"
        },
        "1393": {
            "op": "PUSH1",
            "value": "0x8C"
        },
        "1395": {
            "op": "SHL"
        },
        "1396": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1398": {
            "op": "DUP3"
        },
        "1399": {
            "op": "ADD"
        },
        "1400": {
            "op": "MSTORE"
        },
        "1401": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1403": {
            "op": "ADD"
        },
        "1404": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x258"
        },
        "1408": {
            "op": "JUMP"
        },
        "1409": {
            "fn": "Donation.donateHere",
            "offset": [
                1491,
                1532
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1410": {
            "fn": "Donation.donateHere",
            "offset": [
                1542,
                1567
            ],
            "op": "PUSH3",
            "path": "6",
            "statement": 12,
            "value": "0x58B"
        },
        "1414": {
            "fn": "Donation.donateHere",
            "offset": [
                1542,
                1565
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x6B9"
        },
        "1418": {
            "fn": "Donation.donateHere",
            "jump": "i",
            "offset": [
                1542,
                1567
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1419": {
            "fn": "Donation.donateHere",
            "offset": [
                1542,
                1567
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1420": {
            "offset": [
                1701,
                1702
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "1422": {
            "offset": [
                2628,
                2650
            ],
            "op": "DUP1",
            "path": "1"
        },
        "1423": {
            "fn": "Donation.donateHere",
            "offset": [
                2628,
                2650
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "1424": {
            "fn": "Donation.donateHere",
            "jump": "o",
            "offset": [
                1431,
                1574
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1425": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1426": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x59B"
        },
        "1430": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x60D"
        },
        "1434": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1435": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1436": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1438": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1440": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1442": {
            "op": "SHL"
        },
        "1443": {
            "op": "SUB"
        },
        "1444": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2169,
                2191
            ],
            "op": "DUP2",
            "path": "0",
            "statement": 13
        },
        "1445": {
            "branch": 26,
            "fn": "Ownable.transferOwnership",
            "offset": [
                2169,
                2191
            ],
            "op": "AND",
            "path": "0"
        },
        "1446": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x602"
        },
        "1450": {
            "branch": 26,
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "1451": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "1453": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "MLOAD",
            "path": "0"
        },
        "1454": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1458": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1460": {
            "op": "SHL"
        },
        "1461": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "DUP2",
            "path": "0"
        },
        "1462": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "MSTORE",
            "path": "0"
        },
        "1463": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1465": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "1467": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "DUP3",
            "path": "0"
        },
        "1468": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "ADD",
            "path": "0"
        },
        "1469": {
            "op": "MSTORE"
        },
        "1470": {
            "op": "PUSH1",
            "value": "0x26"
        },
        "1472": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1474": {
            "op": "DUP3"
        },
        "1475": {
            "op": "ADD"
        },
        "1476": {
            "op": "MSTORE"
        },
        "1477": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
        },
        "1510": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1512": {
            "op": "DUP3"
        },
        "1513": {
            "op": "ADD"
        },
        "1514": {
            "op": "MSTORE"
        },
        "1515": {
            "op": "PUSH6",
            "value": "0x646472657373"
        },
        "1522": {
            "op": "PUSH1",
            "value": "0xD0"
        },
        "1524": {
            "op": "SHL"
        },
        "1525": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1527": {
            "op": "DUP3"
        },
        "1528": {
            "op": "ADD"
        },
        "1529": {
            "op": "MSTORE"
        },
        "1530": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "1532": {
            "op": "ADD"
        },
        "1533": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x258"
        },
        "1537": {
            "op": "JUMP"
        },
        "1538": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1539": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2244,
                2272
            ],
            "op": "PUSH3",
            "path": "0",
            "statement": 14,
            "value": "0x4E4"
        },
        "1543": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2263,
                2271
            ],
            "op": "DUP2",
            "path": "0"
        },
        "1544": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2244,
                2262
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x669"
        },
        "1548": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                2244,
                2272
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1549": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1359,
                1489
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1550": {
            "fn": "Ownable.owner",
            "offset": [
                1247,
                1254
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1552": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SLOAD",
            "path": "0"
        },
        "1553": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1555": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1557": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1559": {
            "op": "SHL"
        },
        "1560": {
            "op": "SUB"
        },
        "1561": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "AND",
            "path": "0"
        },
        "1562": {
            "fn": "Context._msgSender",
            "offset": [
                719,
                729
            ],
            "op": "CALLER",
            "path": "5",
            "statement": 15
        },
        "1563": {
            "branch": 27,
            "fn": "Ownable._checkOwner",
            "offset": [
                1422,
                1445
            ],
            "op": "EQ",
            "path": "0",
            "statement": 16
        },
        "1564": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x40A"
        },
        "1568": {
            "branch": 27,
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "1569": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "1571": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "MLOAD",
            "path": "0"
        },
        "1572": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1576": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1578": {
            "op": "SHL"
        },
        "1579": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "DUP2",
            "path": "0"
        },
        "1580": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "MSTORE",
            "path": "0"
        },
        "1581": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1583": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "1585": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "DUP3",
            "path": "0"
        },
        "1586": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "ADD",
            "path": "0"
        },
        "1587": {
            "op": "DUP2"
        },
        "1588": {
            "op": "SWAP1"
        },
        "1589": {
            "op": "MSTORE"
        },
        "1590": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1592": {
            "op": "DUP3"
        },
        "1593": {
            "op": "ADD"
        },
        "1594": {
            "op": "MSTORE"
        },
        "1595": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
        },
        "1628": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1630": {
            "op": "DUP3"
        },
        "1631": {
            "op": "ADD"
        },
        "1632": {
            "op": "MSTORE"
        },
        "1633": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1635": {
            "op": "ADD"
        },
        "1636": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH3",
            "path": "0",
            "value": "0x258"
        },
        "1640": {
            "op": "JUMP"
        },
        "1641": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2433,
                2620
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1642": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2506,
                2522
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1644": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "DUP1",
            "path": "0"
        },
        "1645": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SLOAD",
            "path": "0"
        },
        "1646": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1648": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1650": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1652": {
            "op": "SHL"
        },
        "1653": {
            "op": "SUB"
        },
        "1654": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP4",
            "path": "0",
            "statement": 17
        },
        "1655": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP2",
            "path": "0"
        },
        "1656": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "AND",
            "path": "0"
        },
        "1657": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1659": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1661": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1663": {
            "op": "SHL"
        },
        "1664": {
            "op": "SUB"
        },
        "1665": {
            "op": "NOT"
        },
        "1666": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP4",
            "path": "0"
        },
        "1667": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "AND",
            "path": "0"
        },
        "1668": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP2",
            "path": "0"
        },
        "1669": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "OR",
            "path": "0"
        },
        "1670": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP5",
            "path": "0"
        },
        "1671": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "SSTORE",
            "path": "0"
        },
        "1672": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "PUSH1",
            "path": "0",
            "statement": 18,
            "value": "0x40"
        },
        "1674": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "MLOAD",
            "path": "0"
        },
        "1675": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP2",
            "path": "0"
        },
        "1676": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP1",
            "path": "0"
        },
        "1677": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP3",
            "path": "0"
        },
        "1678": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "AND",
            "path": "0"
        },
        "1679": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP3",
            "path": "0"
        },
        "1680": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "DUP4",
            "path": "0"
        },
        "1681": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP2",
            "path": "0"
        },
        "1682": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "PUSH32",
            "path": "0",
            "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
        },
        "1715": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "SWAP2",
            "path": "0"
        },
        "1716": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2506,
                2522
            ],
            "op": "SWAP1",
            "path": "0"
        },
        "1717": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "LOG3",
            "path": "0"
        },
        "1718": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2496,
                2620
            ],
            "op": "POP",
            "path": "0"
        },
        "1719": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2433,
                2620
            ],
            "op": "POP",
            "path": "0"
        },
        "1720": {
            "fn": "Ownable._transferOwnership",
            "jump": "o",
            "offset": [
                2433,
                2620
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1721": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1580,
                2156
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1722": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1718,
                1728
            ],
            "op": "CALLER",
            "path": "6"
        },
        "1723": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1634,
                1666
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1725": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1726": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1727": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1728": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1717
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "1730": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x20"
        },
        "1732": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1733": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "1735": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1736": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "KECCAK256",
            "path": "6"
        },
        "1737": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "1738": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1634,
                1666
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1739": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1634,
                1666
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1740": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1797,
                1832
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x6D7"
        },
        "1744": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1703,
                1729
            ],
            "op": "DUP4",
            "path": "6"
        },
        "1745": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1822,
                1831
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "1746": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1797,
                1807
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x40C"
        },
        "1750": {
            "fn": "Donation.calculateTransferAmount",
            "jump": "i",
            "offset": [
                1797,
                1832
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1751": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1797,
                1832
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1752": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1857,
                1867
            ],
            "op": "CALLER",
            "path": "6",
            "statement": 19
        },
        "1753": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1755": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1756": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1757": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1758": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1856
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "1760": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x20"
        },
        "1762": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1763": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "1765": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1766": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "KECCAK256",
            "path": "6"
        },
        "1767": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1768": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "1769": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1772,
                1832
            ],
            "op": "SWAP3",
            "path": "6"
        },
        "1770": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1772,
                1832
            ],
            "op": "SWAP4",
            "path": "6"
        },
        "1771": {
            "op": "POP"
        },
        "1772": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1872,
                1881
            ],
            "op": "CALLVALUE",
            "path": "6"
        },
        "1773": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1872,
                1881
            ],
            "op": "SWAP3",
            "path": "6"
        },
        "1774": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1775": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1776": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1868
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1777": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x6FD"
        },
        "1781": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1782": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1872,
                1881
            ],
            "op": "DUP5",
            "path": "6"
        },
        "1783": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1872,
                1881
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1784": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xA7A"
        },
        "1788": {
            "fn": "Donation.calculateTransferAmount",
            "jump": "i",
            "offset": [
                1842,
                1881
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1789": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1790": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1791": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1792": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1842,
                1881
            ],
            "op": "SSTORE",
            "path": "6"
        },
        "1793": {
            "op": "POP"
        },
        "1794": {
            "op": "POP"
        },
        "1795": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1919
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 20,
            "value": "0x2"
        },
        "1797": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "DUP1",
            "path": "6"
        },
        "1798": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "1799": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1920,
                1921
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1801": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1920,
                1921
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1802": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x718"
        },
        "1806": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "1807": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x718"
        },
        "1811": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xAE3"
        },
        "1815": {
            "fn": "Donation.calculateTransferAmount",
            "jump": "i",
            "offset": [
                1913,
                1922
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1816": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1817": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1819": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1820": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "DUP3",
            "path": "6"
        },
        "1821": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1822": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x20"
        },
        "1824": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "DUP3",
            "path": "6"
        },
        "1825": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "KECCAK256",
            "path": "6"
        },
        "1826": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "ADD",
            "path": "6"
        },
        "1827": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "1828": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1830": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1832": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1834": {
            "op": "SHL"
        },
        "1835": {
            "op": "SUB"
        },
        "1836": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1913,
                1922
            ],
            "op": "AND",
            "path": "6"
        },
        "1837": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1899,
                1922
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1838": {
            "branch": 25,
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1899,
                1922
            ],
            "op": "SUB",
            "path": "6"
        },
        "1839": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x774"
        },
        "1843": {
            "branch": 25,
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "1844": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "1846": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "1847": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1851": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1853": {
            "op": "SHL"
        },
        "1854": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1855": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1856": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1858": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "1860": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "DUP3",
            "path": "6"
        },
        "1861": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "ADD",
            "path": "6"
        },
        "1862": {
            "op": "MSTORE"
        },
        "1863": {
            "op": "PUSH1",
            "value": "0x15"
        },
        "1865": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1867": {
            "op": "DUP3"
        },
        "1868": {
            "op": "ADD"
        },
        "1869": {
            "op": "MSTORE"
        },
        "1870": {
            "op": "PUSH21",
            "value": "0x1D1BDAD95B881A5CC81B9BDD0819195C1B1BDE5959"
        },
        "1892": {
            "op": "PUSH1",
            "value": "0x5A"
        },
        "1894": {
            "op": "SHL"
        },
        "1895": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1897": {
            "op": "DUP3"
        },
        "1898": {
            "op": "ADD"
        },
        "1899": {
            "op": "MSTORE"
        },
        "1900": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1902": {
            "op": "ADD"
        },
        "1903": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x258"
        },
        "1907": {
            "op": "JUMP"
        },
        "1908": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1891,
                1948
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1909": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1958,
                1971
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1911": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1986
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x2"
        },
        "1913": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1987,
                1988
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1915": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1916": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "1917": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1918": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "LT",
            "path": "6"
        },
        "1919": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x78D"
        },
        "1923": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "1924": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x78D"
        },
        "1928": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xAE3"
        },
        "1932": {
            "fn": "Donation.calculateTransferAmount",
            "jump": "i",
            "offset": [
                1980,
                1989
            ],
            "op": "JUMP",
            "path": "6"
        },
        "1933": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "1934": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1936": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1937": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "DUP3",
            "path": "6"
        },
        "1938": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1939": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x20"
        },
        "1941": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1942": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1943": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "KECCAK256",
            "path": "6"
        },
        "1944": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "ADD",
            "path": "6"
        },
        "1945": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SLOAD",
            "path": "6"
        },
        "1946": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "statement": 21,
            "value": "0x40"
        },
        "1948": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "1949": {
            "op": "PUSH4",
            "value": "0x40C10F19"
        },
        "1954": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1956": {
            "op": "SHL"
        },
        "1957": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1958": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "1959": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2014,
                2024
            ],
            "op": "CALLER",
            "path": "6"
        },
        "1960": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "1962": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP3",
            "path": "6"
        },
        "1963": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "ADD",
            "path": "6"
        },
        "1964": {
            "op": "MSTORE"
        },
        "1965": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1967": {
            "op": "DUP2"
        },
        "1968": {
            "op": "ADD"
        },
        "1969": {
            "op": "DUP5"
        },
        "1970": {
            "op": "SWAP1"
        },
        "1971": {
            "op": "MSTORE"
        },
        "1972": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1974": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1976": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1978": {
            "op": "SHL"
        },
        "1979": {
            "op": "SUB"
        },
        "1980": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1981": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1982": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "AND",
            "path": "6"
        },
        "1983": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SWAP2",
            "path": "6"
        },
        "1984": {
            "op": "POP"
        },
        "1985": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "DUP2",
            "path": "6"
        },
        "1986": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1980,
                1989
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1987": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2013
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0x40C10F19"
        },
        "1992": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2013
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "1993": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1995": {
            "op": "ADD"
        },
        "1996": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "1998": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "2000": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "2001": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2002": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP4",
            "path": "6"
        },
        "2003": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "SUB",
            "path": "6"
        },
        "2004": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP2",
            "path": "6"
        },
        "2005": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2007": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP8",
            "path": "6"
        },
        "2008": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2009": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "EXTCODESIZE",
            "path": "6"
        },
        "2010": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2011": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2012": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2013": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x7E6"
        },
        "2017": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "2018": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2020": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2021": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "REVERT",
            "path": "6"
        },
        "2022": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "2023": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "POP",
            "path": "6"
        },
        "2024": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "GAS",
            "path": "6"
        },
        "2025": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "CALL",
            "path": "6"
        },
        "2026": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2027": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2028": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2029": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x7FB"
        },
        "2033": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "2034": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "2035": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2037": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2038": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "RETURNDATACOPY",
            "path": "6"
        },
        "2039": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "2040": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2042": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "REVERT",
            "path": "6"
        },
        "2043": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "2044": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "POP",
            "path": "6"
        },
        "2045": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "POP",
            "path": "6"
        },
        "2046": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "POP",
            "path": "6"
        },
        "2047": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2001,
                2041
            ],
            "op": "POP",
            "path": "6"
        },
        "2048": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2058
            ],
            "op": "DUP1",
            "path": "6",
            "statement": 22
        },
        "2049": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2051": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2053": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2055": {
            "op": "SHL"
        },
        "2056": {
            "op": "SUB"
        },
        "2057": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2063
            ],
            "op": "AND",
            "path": "6"
        },
        "2058": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2063
            ],
            "op": "PUSH4",
            "path": "6",
            "value": "0x40C10F19"
        },
        "2063": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2064,
                2071
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x821"
        },
        "2067": {
            "fn": "Ownable.owner",
            "offset": [
                1247,
                1254
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "2069": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SLOAD",
            "path": "0"
        },
        "2070": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2072": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2074": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2076": {
            "op": "SHL"
        },
        "2077": {
            "op": "SUB"
        },
        "2078": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "AND",
            "path": "0"
        },
        "2079": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SWAP1",
            "path": "0"
        },
        "2080": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2081": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2064,
                2071
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "2082": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2073,
                2092
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x82E"
        },
        "2086": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2090,
                2092
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0xA"
        },
        "2088": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2073,
                2087
            ],
            "op": "DUP7",
            "path": "6"
        },
        "2089": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2073,
                2092
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0xAC0"
        },
        "2093": {
            "fn": "Donation.calculateTransferAmount",
            "jump": "i",
            "offset": [
                2073,
                2092
            ],
            "op": "JUMP",
            "path": "6"
        },
        "2094": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2073,
                2092
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "2095": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "2097": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "2098": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2100": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2102": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "2104": {
            "op": "SHL"
        },
        "2105": {
            "op": "SUB"
        },
        "2106": {
            "op": "NOT"
        },
        "2107": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0xE0"
        },
        "2109": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP6",
            "path": "6"
        },
        "2110": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "SWAP1",
            "path": "6"
        },
        "2111": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "SHL",
            "path": "6"
        },
        "2112": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "AND",
            "path": "6"
        },
        "2113": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP2",
            "path": "6"
        },
        "2114": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "MSTORE",
            "path": "6"
        },
        "2115": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2117": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2119": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2121": {
            "op": "SHL"
        },
        "2122": {
            "op": "SUB"
        },
        "2123": {
            "op": "SWAP1"
        },
        "2124": {
            "op": "SWAP3"
        },
        "2125": {
            "op": "AND"
        },
        "2126": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x4"
        },
        "2128": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP4",
            "path": "6"
        },
        "2129": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "ADD",
            "path": "6"
        },
        "2130": {
            "op": "MSTORE"
        },
        "2131": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2133": {
            "op": "DUP3"
        },
        "2134": {
            "op": "ADD"
        },
        "2135": {
            "op": "MSTORE"
        },
        "2136": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2138": {
            "op": "ADD"
        },
        "2139": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2141": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x40"
        },
        "2143": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "MLOAD",
            "path": "6"
        },
        "2144": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2145": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP4",
            "path": "6"
        },
        "2146": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "SUB",
            "path": "6"
        },
        "2147": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP2",
            "path": "6"
        },
        "2148": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2150": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP8",
            "path": "6"
        },
        "2151": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2152": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "EXTCODESIZE",
            "path": "6"
        },
        "2153": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2154": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2155": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2156": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x875"
        },
        "2160": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "2161": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2163": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2164": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "REVERT",
            "path": "6"
        },
        "2165": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "2166": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "POP",
            "path": "6"
        },
        "2167": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "GAS",
            "path": "6"
        },
        "2168": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "CALL",
            "path": "6"
        },
        "2169": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2170": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2171": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "ISZERO",
            "path": "6"
        },
        "2172": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH3",
            "path": "6",
            "value": "0x88A"
        },
        "2176": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "JUMPI",
            "path": "6"
        },
        "2177": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "2178": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2180": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "DUP1",
            "path": "6"
        },
        "2181": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "RETURNDATACOPY",
            "path": "6"
        },
        "2182": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "RETURNDATASIZE",
            "path": "6"
        },
        "2183": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x0"
        },
        "2185": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "REVERT",
            "path": "6"
        },
        "2186": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "JUMPDEST",
            "path": "6"
        },
        "2187": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "POP",
            "path": "6"
        },
        "2188": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "POP",
            "path": "6"
        },
        "2189": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "POP",
            "path": "6"
        },
        "2190": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                2051,
                2093
            ],
            "op": "POP",
            "path": "6"
        },
        "2191": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1624,
                2156
            ],
            "op": "POP",
            "path": "6"
        },
        "2192": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1624,
                2156
            ],
            "op": "POP",
            "path": "6"
        },
        "2193": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1624,
                2156
            ],
            "op": "POP",
            "path": "6"
        },
        "2194": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1624,
                2156
            ],
            "op": "POP",
            "path": "6"
        },
        "2195": {
            "fn": "Donation.calculateTransferAmount",
            "offset": [
                1624,
                2156
            ],
            "op": "POP",
            "path": "6"
        },
        "2196": {
            "fn": "Donation.calculateTransferAmount",
            "jump": "o",
            "offset": [
                1580,
                2156
            ],
            "op": "JUMP",
            "path": "6"
        },
        "2197": {
            "op": "JUMPDEST"
        },
        "2198": {
            "op": "PUSH2",
            "value": "0xDB1"
        },
        "2201": {
            "op": "DUP1"
        },
        "2202": {
            "op": "PUSH3",
            "value": "0xAFA"
        },
        "2206": {
            "op": "DUP4"
        },
        "2207": {
            "op": "CODECOPY"
        },
        "2208": {
            "op": "ADD"
        },
        "2209": {
            "op": "SWAP1"
        },
        "2210": {
            "jump": "o",
            "op": "JUMP"
        },
        "2211": {
            "op": "JUMPDEST"
        },
        "2212": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2214": {
            "op": "DUP1"
        },
        "2215": {
            "op": "DUP4"
        },
        "2216": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "2218": {
            "op": "DUP5"
        },
        "2219": {
            "op": "ADD"
        },
        "2220": {
            "op": "SLT"
        },
        "2221": {
            "op": "PUSH3",
            "value": "0x8B6"
        },
        "2225": {
            "op": "JUMPI"
        },
        "2226": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2228": {
            "op": "DUP1"
        },
        "2229": {
            "op": "REVERT"
        },
        "2230": {
            "op": "JUMPDEST"
        },
        "2231": {
            "op": "POP"
        },
        "2232": {
            "op": "DUP2"
        },
        "2233": {
            "op": "CALLDATALOAD"
        },
        "2234": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "2243": {
            "op": "DUP2"
        },
        "2244": {
            "op": "GT"
        },
        "2245": {
            "op": "ISZERO"
        },
        "2246": {
            "op": "PUSH3",
            "value": "0x8CF"
        },
        "2250": {
            "op": "JUMPI"
        },
        "2251": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2253": {
            "op": "DUP1"
        },
        "2254": {
            "op": "REVERT"
        },
        "2255": {
            "op": "JUMPDEST"
        },
        "2256": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2258": {
            "op": "DUP4"
        },
        "2259": {
            "op": "ADD"
        },
        "2260": {
            "op": "SWAP2"
        },
        "2261": {
            "op": "POP"
        },
        "2262": {
            "op": "DUP4"
        },
        "2263": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2265": {
            "op": "DUP3"
        },
        "2266": {
            "op": "DUP6"
        },
        "2267": {
            "op": "ADD"
        },
        "2268": {
            "op": "ADD"
        },
        "2269": {
            "op": "GT"
        },
        "2270": {
            "op": "ISZERO"
        },
        "2271": {
            "op": "PUSH3",
            "value": "0x8E8"
        },
        "2275": {
            "op": "JUMPI"
        },
        "2276": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2278": {
            "op": "DUP1"
        },
        "2279": {
            "op": "REVERT"
        },
        "2280": {
            "op": "JUMPDEST"
        },
        "2281": {
            "op": "SWAP3"
        },
        "2282": {
            "op": "POP"
        },
        "2283": {
            "op": "SWAP3"
        },
        "2284": {
            "op": "SWAP1"
        },
        "2285": {
            "op": "POP"
        },
        "2286": {
            "jump": "o",
            "op": "JUMP"
        },
        "2287": {
            "op": "JUMPDEST"
        },
        "2288": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2290": {
            "op": "DUP1"
        },
        "2291": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2293": {
            "op": "DUP1"
        },
        "2294": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2296": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "2298": {
            "op": "DUP7"
        },
        "2299": {
            "op": "DUP9"
        },
        "2300": {
            "op": "SUB"
        },
        "2301": {
            "op": "SLT"
        },
        "2302": {
            "op": "ISZERO"
        },
        "2303": {
            "op": "PUSH3",
            "value": "0x908"
        },
        "2307": {
            "op": "JUMPI"
        },
        "2308": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2310": {
            "op": "DUP1"
        },
        "2311": {
            "op": "REVERT"
        },
        "2312": {
            "op": "JUMPDEST"
        },
        "2313": {
            "op": "DUP6"
        },
        "2314": {
            "op": "CALLDATALOAD"
        },
        "2315": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "2324": {
            "op": "DUP1"
        },
        "2325": {
            "op": "DUP3"
        },
        "2326": {
            "op": "GT"
        },
        "2327": {
            "op": "ISZERO"
        },
        "2328": {
            "op": "PUSH3",
            "value": "0x921"
        },
        "2332": {
            "op": "JUMPI"
        },
        "2333": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2335": {
            "op": "DUP1"
        },
        "2336": {
            "op": "REVERT"
        },
        "2337": {
            "op": "JUMPDEST"
        },
        "2338": {
            "op": "PUSH3",
            "value": "0x92F"
        },
        "2342": {
            "op": "DUP10"
        },
        "2343": {
            "op": "DUP4"
        },
        "2344": {
            "op": "DUP11"
        },
        "2345": {
            "op": "ADD"
        },
        "2346": {
            "op": "PUSH3",
            "value": "0x8A3"
        },
        "2350": {
            "jump": "i",
            "op": "JUMP"
        },
        "2351": {
            "op": "JUMPDEST"
        },
        "2352": {
            "op": "SWAP1"
        },
        "2353": {
            "op": "SWAP8"
        },
        "2354": {
            "op": "POP"
        },
        "2355": {
            "op": "SWAP6"
        },
        "2356": {
            "op": "POP"
        },
        "2357": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2359": {
            "op": "DUP9"
        },
        "2360": {
            "op": "ADD"
        },
        "2361": {
            "op": "CALLDATALOAD"
        },
        "2362": {
            "op": "SWAP2"
        },
        "2363": {
            "op": "POP"
        },
        "2364": {
            "op": "DUP1"
        },
        "2365": {
            "op": "DUP3"
        },
        "2366": {
            "op": "GT"
        },
        "2367": {
            "op": "ISZERO"
        },
        "2368": {
            "op": "PUSH3",
            "value": "0x949"
        },
        "2372": {
            "op": "JUMPI"
        },
        "2373": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2375": {
            "op": "DUP1"
        },
        "2376": {
            "op": "REVERT"
        },
        "2377": {
            "op": "JUMPDEST"
        },
        "2378": {
            "op": "POP"
        },
        "2379": {
            "op": "PUSH3",
            "value": "0x958"
        },
        "2383": {
            "op": "DUP9"
        },
        "2384": {
            "op": "DUP3"
        },
        "2385": {
            "op": "DUP10"
        },
        "2386": {
            "op": "ADD"
        },
        "2387": {
            "op": "PUSH3",
            "value": "0x8A3"
        },
        "2391": {
            "jump": "i",
            "op": "JUMP"
        },
        "2392": {
            "op": "JUMPDEST"
        },
        "2393": {
            "op": "SWAP7"
        },
        "2394": {
            "op": "SWAP10"
        },
        "2395": {
            "op": "SWAP6"
        },
        "2396": {
            "op": "SWAP9"
        },
        "2397": {
            "op": "POP"
        },
        "2398": {
            "op": "SWAP7"
        },
        "2399": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "2401": {
            "op": "ADD"
        },
        "2402": {
            "op": "CALLDATALOAD"
        },
        "2403": {
            "op": "SWAP5"
        },
        "2404": {
            "op": "SWAP4"
        },
        "2405": {
            "op": "POP"
        },
        "2406": {
            "op": "POP"
        },
        "2407": {
            "op": "POP"
        },
        "2408": {
            "op": "POP"
        },
        "2409": {
            "jump": "o",
            "op": "JUMP"
        },
        "2410": {
            "op": "JUMPDEST"
        },
        "2411": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2413": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2415": {
            "op": "DUP3"
        },
        "2416": {
            "op": "DUP5"
        },
        "2417": {
            "op": "SUB"
        },
        "2418": {
            "op": "SLT"
        },
        "2419": {
            "op": "ISZERO"
        },
        "2420": {
            "op": "PUSH3",
            "value": "0x97D"
        },
        "2424": {
            "op": "JUMPI"
        },
        "2425": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2427": {
            "op": "DUP1"
        },
        "2428": {
            "op": "REVERT"
        },
        "2429": {
            "op": "JUMPDEST"
        },
        "2430": {
            "op": "POP"
        },
        "2431": {
            "op": "CALLDATALOAD"
        },
        "2432": {
            "op": "SWAP2"
        },
        "2433": {
            "op": "SWAP1"
        },
        "2434": {
            "op": "POP"
        },
        "2435": {
            "jump": "o",
            "op": "JUMP"
        },
        "2436": {
            "op": "JUMPDEST"
        },
        "2437": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2439": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2441": {
            "op": "DUP3"
        },
        "2442": {
            "op": "DUP5"
        },
        "2443": {
            "op": "SUB"
        },
        "2444": {
            "op": "SLT"
        },
        "2445": {
            "op": "ISZERO"
        },
        "2446": {
            "op": "PUSH3",
            "value": "0x997"
        },
        "2450": {
            "op": "JUMPI"
        },
        "2451": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2453": {
            "op": "DUP1"
        },
        "2454": {
            "op": "REVERT"
        },
        "2455": {
            "op": "JUMPDEST"
        },
        "2456": {
            "op": "DUP2"
        },
        "2457": {
            "op": "CALLDATALOAD"
        },
        "2458": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2460": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2462": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2464": {
            "op": "SHL"
        },
        "2465": {
            "op": "SUB"
        },
        "2466": {
            "op": "DUP2"
        },
        "2467": {
            "op": "AND"
        },
        "2468": {
            "op": "DUP2"
        },
        "2469": {
            "op": "EQ"
        },
        "2470": {
            "op": "PUSH3",
            "value": "0x9AF"
        },
        "2474": {
            "op": "JUMPI"
        },
        "2475": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2477": {
            "op": "DUP1"
        },
        "2478": {
            "op": "REVERT"
        },
        "2479": {
            "op": "JUMPDEST"
        },
        "2480": {
            "op": "SWAP4"
        },
        "2481": {
            "op": "SWAP3"
        },
        "2482": {
            "op": "POP"
        },
        "2483": {
            "op": "POP"
        },
        "2484": {
            "op": "POP"
        },
        "2485": {
            "jump": "o",
            "op": "JUMP"
        },
        "2486": {
            "op": "JUMPDEST"
        },
        "2487": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2489": {
            "op": "DUP1"
        },
        "2490": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "2492": {
            "op": "DUP4"
        },
        "2493": {
            "op": "DUP6"
        },
        "2494": {
            "op": "SUB"
        },
        "2495": {
            "op": "SLT"
        },
        "2496": {
            "op": "ISZERO"
        },
        "2497": {
            "op": "PUSH3",
            "value": "0x9CA"
        },
        "2501": {
            "op": "JUMPI"
        },
        "2502": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2504": {
            "op": "DUP1"
        },
        "2505": {
            "op": "REVERT"
        },
        "2506": {
            "op": "JUMPDEST"
        },
        "2507": {
            "op": "POP"
        },
        "2508": {
            "op": "POP"
        },
        "2509": {
            "op": "DUP1"
        },
        "2510": {
            "op": "CALLDATALOAD"
        },
        "2511": {
            "op": "SWAP3"
        },
        "2512": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2514": {
            "op": "SWAP1"
        },
        "2515": {
            "op": "SWAP2"
        },
        "2516": {
            "op": "ADD"
        },
        "2517": {
            "op": "CALLDATALOAD"
        },
        "2518": {
            "op": "SWAP2"
        },
        "2519": {
            "op": "POP"
        },
        "2520": {
            "jump": "o",
            "op": "JUMP"
        },
        "2521": {
            "op": "JUMPDEST"
        },
        "2522": {
            "op": "DUP2"
        },
        "2523": {
            "op": "DUP4"
        },
        "2524": {
            "op": "MSTORE"
        },
        "2525": {
            "op": "DUP2"
        },
        "2526": {
            "op": "DUP2"
        },
        "2527": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2529": {
            "op": "DUP6"
        },
        "2530": {
            "op": "ADD"
        },
        "2531": {
            "op": "CALLDATACOPY"
        },
        "2532": {
            "op": "POP"
        },
        "2533": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2535": {
            "op": "DUP3"
        },
        "2536": {
            "op": "DUP3"
        },
        "2537": {
            "op": "ADD"
        },
        "2538": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2540": {
            "op": "SWAP1"
        },
        "2541": {
            "op": "DUP2"
        },
        "2542": {
            "op": "ADD"
        },
        "2543": {
            "op": "SWAP2"
        },
        "2544": {
            "op": "SWAP1"
        },
        "2545": {
            "op": "SWAP2"
        },
        "2546": {
            "op": "MSTORE"
        },
        "2547": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "2549": {
            "op": "SWAP1"
        },
        "2550": {
            "op": "SWAP2"
        },
        "2551": {
            "op": "ADD"
        },
        "2552": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "2554": {
            "op": "NOT"
        },
        "2555": {
            "op": "AND"
        },
        "2556": {
            "op": "SWAP1"
        },
        "2557": {
            "op": "SWAP2"
        },
        "2558": {
            "op": "ADD"
        },
        "2559": {
            "op": "ADD"
        },
        "2560": {
            "op": "SWAP1"
        },
        "2561": {
            "jump": "o",
            "op": "JUMP"
        },
        "2562": {
            "op": "JUMPDEST"
        },
        "2563": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "2565": {
            "op": "DUP2"
        },
        "2566": {
            "op": "MSTORE"
        },
        "2567": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2569": {
            "op": "PUSH3",
            "value": "0xA18"
        },
        "2573": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "2575": {
            "op": "DUP4"
        },
        "2576": {
            "op": "ADD"
        },
        "2577": {
            "op": "DUP8"
        },
        "2578": {
            "op": "DUP10"
        },
        "2579": {
            "op": "PUSH3",
            "value": "0x9D9"
        },
        "2583": {
            "jump": "i",
            "op": "JUMP"
        },
        "2584": {
            "op": "JUMPDEST"
        },
        "2585": {
            "op": "DUP3"
        },
        "2586": {
            "op": "DUP2"
        },
        "2587": {
            "op": "SUB"
        },
        "2588": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2590": {
            "op": "DUP5"
        },
        "2591": {
            "op": "ADD"
        },
        "2592": {
            "op": "MSTORE"
        },
        "2593": {
            "op": "PUSH3",
            "value": "0xA2D"
        },
        "2597": {
            "op": "DUP2"
        },
        "2598": {
            "op": "DUP7"
        },
        "2599": {
            "op": "DUP9"
        },
        "2600": {
            "op": "PUSH3",
            "value": "0x9D9"
        },
        "2604": {
            "jump": "i",
            "op": "JUMP"
        },
        "2605": {
            "op": "JUMPDEST"
        },
        "2606": {
            "op": "SWAP2"
        },
        "2607": {
            "op": "POP"
        },
        "2608": {
            "op": "POP"
        },
        "2609": {
            "op": "DUP3"
        },
        "2610": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "2612": {
            "op": "DUP4"
        },
        "2613": {
            "op": "ADD"
        },
        "2614": {
            "op": "MSTORE"
        },
        "2615": {
            "op": "SWAP7"
        },
        "2616": {
            "op": "SWAP6"
        },
        "2617": {
            "op": "POP"
        },
        "2618": {
            "op": "POP"
        },
        "2619": {
            "op": "POP"
        },
        "2620": {
            "op": "POP"
        },
        "2621": {
            "op": "POP"
        },
        "2622": {
            "op": "POP"
        },
        "2623": {
            "jump": "o",
            "op": "JUMP"
        },
        "2624": {
            "op": "JUMPDEST"
        },
        "2625": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2627": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2629": {
            "op": "DUP3"
        },
        "2630": {
            "op": "DUP5"
        },
        "2631": {
            "op": "SUB"
        },
        "2632": {
            "op": "SLT"
        },
        "2633": {
            "op": "ISZERO"
        },
        "2634": {
            "op": "PUSH3",
            "value": "0xA53"
        },
        "2638": {
            "op": "JUMPI"
        },
        "2639": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2641": {
            "op": "DUP1"
        },
        "2642": {
            "op": "REVERT"
        },
        "2643": {
            "op": "JUMPDEST"
        },
        "2644": {
            "op": "DUP2"
        },
        "2645": {
            "op": "MLOAD"
        },
        "2646": {
            "op": "DUP1"
        },
        "2647": {
            "op": "ISZERO"
        },
        "2648": {
            "op": "ISZERO"
        },
        "2649": {
            "op": "DUP2"
        },
        "2650": {
            "op": "EQ"
        },
        "2651": {
            "op": "PUSH3",
            "value": "0x9AF"
        },
        "2655": {
            "op": "JUMPI"
        },
        "2656": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2658": {
            "op": "DUP1"
        },
        "2659": {
            "op": "REVERT"
        },
        "2660": {
            "op": "JUMPDEST"
        },
        "2661": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "2666": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "2668": {
            "op": "SHL"
        },
        "2669": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2671": {
            "op": "MSTORE"
        },
        "2672": {
            "op": "PUSH1",
            "value": "0x11"
        },
        "2674": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "2676": {
            "op": "MSTORE"
        },
        "2677": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2679": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2681": {
            "op": "REVERT"
        },
        "2682": {
            "op": "JUMPDEST"
        },
        "2683": {
            "op": "DUP1"
        },
        "2684": {
            "op": "DUP3"
        },
        "2685": {
            "op": "ADD"
        },
        "2686": {
            "op": "DUP1"
        },
        "2687": {
            "op": "DUP3"
        },
        "2688": {
            "op": "GT"
        },
        "2689": {
            "op": "ISZERO"
        },
        "2690": {
            "op": "PUSH3",
            "value": "0x4A7"
        },
        "2694": {
            "op": "JUMPI"
        },
        "2695": {
            "op": "PUSH3",
            "value": "0x4A7"
        },
        "2699": {
            "op": "PUSH3",
            "value": "0xA64"
        },
        "2703": {
            "jump": "i",
            "op": "JUMP"
        },
        "2704": {
            "op": "JUMPDEST"
        },
        "2705": {
            "op": "DUP1"
        },
        "2706": {
            "op": "DUP3"
        },
        "2707": {
            "op": "MUL"
        },
        "2708": {
            "op": "DUP2"
        },
        "2709": {
            "op": "ISZERO"
        },
        "2710": {
            "op": "DUP3"
        },
        "2711": {
            "op": "DUP3"
        },
        "2712": {
            "op": "DIV"
        },
        "2713": {
            "op": "DUP5"
        },
        "2714": {
            "op": "EQ"
        },
        "2715": {
            "op": "OR"
        },
        "2716": {
            "op": "PUSH3",
            "value": "0x4A7"
        },
        "2720": {
            "op": "JUMPI"
        },
        "2721": {
            "op": "PUSH3",
            "value": "0x4A7"
        },
        "2725": {
            "op": "PUSH3",
            "value": "0xA64"
        },
        "2729": {
            "jump": "i",
            "op": "JUMP"
        },
        "2730": {
            "op": "JUMPDEST"
        },
        "2731": {
            "op": "DUP2"
        },
        "2732": {
            "op": "DUP2"
        },
        "2733": {
            "op": "SUB"
        },
        "2734": {
            "op": "DUP2"
        },
        "2735": {
            "op": "DUP2"
        },
        "2736": {
            "op": "GT"
        },
        "2737": {
            "op": "ISZERO"
        },
        "2738": {
            "op": "PUSH3",
            "value": "0x4A7"
        },
        "2742": {
            "op": "JUMPI"
        },
        "2743": {
            "op": "PUSH3",
            "value": "0x4A7"
        },
        "2747": {
            "op": "PUSH3",
            "value": "0xA64"
        },
        "2751": {
            "jump": "i",
            "op": "JUMP"
        },
        "2752": {
            "op": "JUMPDEST"
        },
        "2753": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2755": {
            "op": "DUP3"
        },
        "2756": {
            "op": "PUSH3",
            "value": "0xADE"
        },
        "2760": {
            "op": "JUMPI"
        },
        "2761": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "2766": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "2768": {
            "op": "SHL"
        },
        "2769": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2771": {
            "op": "MSTORE"
        },
        "2772": {
            "op": "PUSH1",
            "value": "0x12"
        },
        "2774": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "2776": {
            "op": "MSTORE"
        },
        "2777": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2779": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2781": {
            "op": "REVERT"
        },
        "2782": {
            "op": "JUMPDEST"
        },
        "2783": {
            "op": "POP"
        },
        "2784": {
            "op": "DIV"
        },
        "2785": {
            "op": "SWAP1"
        },
        "2786": {
            "jump": "o",
            "op": "JUMP"
        },
        "2787": {
            "op": "JUMPDEST"
        },
        "2788": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "2793": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "2795": {
            "op": "SHL"
        },
        "2796": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2798": {
            "op": "MSTORE"
        },
        "2799": {
            "op": "PUSH1",
            "value": "0x32"
        },
        "2801": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "2803": {
            "op": "MSTORE"
        },
        "2804": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2806": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2808": {
            "op": "REVERT"
        }
    },
    "sha1": "7e6b2b35c17390ecf1b057a1e40f6c959d2ae942",
    "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract Token is ERC20 {\n    constructor(\n        string memory _name,\n        string memory _ticker,\n        uint256 _supply\n    ) ERC20(_name, _ticker) {\n        _mint(msg.sender, _supply);\n    }\n\n    function mint(address _from, uint256 _supply) public {\n        _mint(_from, _supply);\n    }\n}\n\ncontract Donation is Ownable, ReentrancyGuard {\n    address[] public tokens;\n    uint256 public tokenCount;\n    event TokenDeployed(address tokenAddress);\n\n    function deployToken(\n        string calldata _name,\n        string calldata _ticker,\n        uint256 _supply\n    ) public returns (address) {\n        require(tokenCount == 0, \"can be used only one time\");\n        Token token = new Token(_name, _ticker, _supply);\n        token.transfer(msg.sender, _supply);\n        tokens.push(address(token));\n        tokenCount += 1;\n        emit TokenDeployed(address(token));\n        return address(token);\n    }\n\n    //sil\n    mapping(address => uint256) public donationAmount;\n\n    //AggregatorV3Interface internal ethUsdPriceFeed;\n\n    /*enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    LOTTERY_STATE public lottery_state;*/\n\n    // 0\n    // 1\n    // 2\n\n    function donateHere() public payable nonReentrant {\n        require(msg.value > 0, \"Cannot donate 0\");\n        calculateTransferAmount();\n    }\n\n    function calculateTransferAmount() internal {\n        uint256 calculatedTransferAmount = 0;\n        uint256 beforeAmount = donationAmount[msg.sender];\n        uint256 issueAmount = 0;\n        uint256 transferAmount = findIssued(beforeAmount, msg.value);\n        donationAmount[msg.sender] += msg.value;\n        require(address(0) != tokens[0], \"token is not deployed\");\n        Token myToken = Token(tokens[0]);\n\n        myToken.mint(msg.sender, transferAmount);\n        myToken.mint(owner(), transferAmount / 10);\n        //myToken.transfer(msg.sender, transferAmount);\n    }\n\n    function findIssued(uint256 _beforeAmount, uint256 _afterAmount)\n        public\n        pure\n        returns (uint256)\n    {\n        uint256 totalPrizeAmount;\n        uint256 totalAmount = _beforeAmount + _afterAmount;\n        if (_beforeAmount == 0) {\n            totalPrizeAmount = 1 * 10**18;\n        }\n        //kactane verildi\u011fi\n        return\n            totalPrizeAmount +\n            (((totalAmount * 1 * 10**18) - (_beforeAmount * 1 * 10**18)) /\n                (10**17));\n    }\n\n    /*function transferOwner(address newOwner) external onlyOwner {\n        transferOwnership(newOwner);\n    }*/\n\n    function recoverEth() external onlyOwner {\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    //event cantSendEthOwner(address indexed to, uint256 value);\n\n    //sil sonu\n\n    constructor() public {}\n\n    /*nonReentrant*/\n}\n",
    "sourceMap": "532:2482:6:-:0;;;2967:23;;;;;;;;;-1:-1:-1;936:32:0;719:10:5;936:18:0;:32::i;:::-;1701:1:1;1806:22;;532:2482:6;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;532:2482:6:-;;;;;;;",
    "sourcePath": "contracts/Donation.sol",
    "type": "contract",
    "deployment": {
        "address": "0x0200441dfBd98B7b212cB9e64b9001BE00d052E8",
        "chainid": "56",
        "blockHeight": 24466219
    }
}